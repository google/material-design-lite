{"version":3,"sources":["animation.js","button.js","checkbox.js","column-layout.js","icon-toggle.js","menu.js","progress.js","radio.js","slider.js","spinner.js","switch.js","tabs.js","textfield.js","tooltip.js","layout.js","ripple.js","mdlComponentHandler.js","rAF.js","material.js"],"names":["DemoAnimation","element","this","element_","position_","Constant_","STARTING_POSITION","movable_","querySelector","CssClasses_","MOVABLE","init","MaterialButton","MaterialCheckbox","MaterialColumnLayout","MaterialIconToggle","MaterialMenu","MaterialProgress","MaterialRadio","MaterialSlider","isIE_","window","navigator","msPointerEnabled","MaterialSpinner","MaterialSwitch","MaterialTabs","MaterialTab","tab","ctx","classList","contains","WSK_JS_RIPPLE_EFFECT","rippleContainer","document","createElement","add","WSK_RIPPLE_CONTAINER","ripple","WSK_RIPPLE","appendChild","addEventListener","e","preventDefault","href","split","panel","resetTabState_","resetPanelState_","ACTIVE_CLASS","MaterialTextfield","maxRows","NO_MAX_ROWS","MaterialTooltip","MaterialLayout","MaterialLayoutTab","tabs","panels","layout","tabBar_","JS_RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","content_","MaterialRipple","componentHandler","findRegisteredClass_","name","optReplace","i","registeredComponents_","length","className","undefined","upgradeDomInternal","jsClass","cssClass","registeredClass","elements","querySelectorAll","n","upgradeElementInternal","dataUpgraded","getAttribute","indexOf","setAttribute","instance","classConstructor","createdComponents_","push","callbacks","forEach","callback","widget","ev","createEvent","initEvent","dispatchEvent","registerInternal","config","newConfig","constructor","classAsString","found","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","upgradeDom","upgradeElement","upgradeAllRegistered","registerUpgradedCallback","register","Array","prototype","documentElement","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","test","userAgent","lastTime","nextTime","Math","max","setTimeout","clearTimeout","POSITION_PREFIX","handleClick_","event","remove","console","error","bind","RIPPLE_EFFECT","blurHandler","blur","disable","disabled","enable","TINY_TIMEOUT","INPUT","BOX_OUTLINE","FOCUS_HELPER","TICK_OUTLINE","RIPPLE_IGNORE_EVENTS","RIPPLE_CENTER","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","onChange_","updateClasses_","onFocus_","onBlur_","onMouseUp_","blur_","inputElement_","checked","check","uncheck","boxOutline","tickContainer","tickOutline","INVISIBLE_WRAPPING_ELEMENT_COUNT","INVISIBLE_WRAPPING_ELEMENT","j","hiddenHackDiv","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","parentElement","insertBefore","removeChild","container_","outline","outline_","forElId","forEl","getElementById","forElement_","handleForClick_","handleForKeyboardEvent_","items","handleItemClick_","tabIndex","handleItemKeyboardEvent_","item","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","left","offsetLeft","bottom","toggle","keyCode","focus","currentIndex","slice","call","target","MouseEvent","click","hide","stopPropagation","closing_","applyClip_","height","width","clip","addAnimationEndListener_","cleanup","show","transitionDuration","itemDelay","transitionDelay","removeEventListener","INDETERMINATE_CLASS","setProgress","p","progressbar_","setBuffer","bufferbar_","auxbar_","el","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","btnElement_","radios","getElementsByClassName","button","onMouseup_","label","outerCircle","innerCircle","IE_CONTAINER","SLIDER_CONTAINER","BACKGROUND_FLEX","BACKGROUND_LOWER","BACKGROUND_UPPER","IS_LOWEST_VALUE","onInput_","updateValueStyles_","fraction","value","min","backgroundLower_","flex","webkitFlex","backgroundUpper_","change","containerIE","backgroundFlex","WSK_SPINNER_LAYER_COUNT","WSK_SPINNER_LAYER","WSK_SPINNER_CIRCLE_CLIPPER","WSK_SPINNER_CIRCLE","WSK_SPINNER_GAP_PATCH","WSK_SPINNER_LEFT","WSK_SPINNER_RIGHT","createLayer","index","layer","leftClipper","gapPatch","rightClipper","circleOwners","circle","stop","start","TRACK","THUMB","on","off","track","thumb","focusHelper","TAB_CLASS","PANEL_CLASS","UPGRADED_CLASS","WSK_JS_RIPPLE_EFFECT_IGNORE_EVENTS","initTabs_","tabs_","panels_","k","MAX_ROWS_ATTRIBUTE","LABEL","IS_DIRTY","IS_INVALID","onKeyDown_","currentRowCount","input_","validity","valid","label_","hasAttribute","parseInt","isNaN","IS_ACTIVE","handleMouseEnter_","props","marginLeft","offsetWidth","handleMouseLeave_","MAX_WIDTH","Mode_","STANDARD","SEAMED","WATERFALL","SCROLL","HEADER","DRAWER","CONTENT","DRAWER_BTN","HEADER_SEAMED","HEADER_WATERFALL","HEADER_SCROLL","FIXED_HEADER","OBFUSCATOR","TAB_BAR","TAB_CONTAINER","TAB","TAB_BAR_BUTTON","TAB_BAR_LEFT_BUTTON","TAB_BAR_RIGHT_BUTTON","PANEL","HAS_DRAWER_CLASS","SHADOW_CLASS","COMPACT_CLASS","SMALL_SCREEN_CLASS","DRAWER_OPEN_CLASS","ANIMATING_CLASS","contentScrollHandler_","header_","scrollTop","screenSizeHandler_","screenSizeMediaQuery_","matches","drawer_","drawerToggleHandler_","headerTransitionEndHandler","headerClickHandler","tabBar","mode","matchMedia","addListener","drawerButton","firstChild","obfuscator","tabContainer","leftButton","scrollLeft","rightButton","tabScrollHandler","scrollWidth","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_EFFECT_IGNORE_EVENTS","downHandler_","rippleElement_","type","ignoringMouseDown_","frameCount","getFrameCount","setFrameCount","x","y","bound","currentTarget","clientX","clientY","round","touches","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","detail","recentering","frameCount_","rippleSize_","x_","y_","sqrt","fC","getRippleElement","newX","newY","transformString","scale","size","offset","webkitTransform","msTransform","transform"],"mappings":"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","file":"material.min.js","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Animation WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction DemoAnimation(element) {\n  'use strict';\n\n  this.element_ = element;\n  this.position_ = this.Constant_.STARTING_POSITION;\n  this.movable_ = this.element_.querySelector('.' + this.CssClasses_.MOVABLE);\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nDemoAnimation.prototype.Constant_ = {\n  STARTING_POSITION: 1\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nDemoAnimation.prototype.CssClasses_ = {\n  MOVABLE: 'demo-animation__movable',\n  POSITION_PREFIX: 'demo-animation--position-'\n};\n\n/**\n * Handle click of element.\n * @param {Event} event The event that fired.\n * @private\n */\nDemoAnimation.prototype.handleClick_ = function(event) {\n  'use strict';\n\n  this.movable_.classList.remove(this.CssClasses_.POSITION_PREFIX +\n      this.position_);\n  this.position_++;\n  if (this.position_ > 6) {\n    this.position_ = 1;\n  }\n  this.movable_.classList.add(this.CssClasses_.POSITION_PREFIX +\n      this.position_);\n};\n\n/**\n * Initialize element.\n */\nDemoAnimation.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    if (!this.movable_) {\n      console.error('Was expecting to find an element with class name ' +\n          this.CssClasses_.MOVABLE + ' inside of: ', this.element_);\n      return;\n    }\n\n    this.element_.addEventListener('click', this.handleClick_.bind(this));\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: DemoAnimation,\n  classAsString: 'DemoAnimation',\n  cssClass: 'demo-js-animation'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Button WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialButton(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialButton.prototype.Constant_ = {\n  // None for now.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialButton.prototype.CssClasses_ = {\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n  RIPPLE: 'mdl-ripple'\n};\n\n/**\n * Handle blur of element.\n * @param {HTMLElement} element The instance of a button we want to blur.\n * @private\n */\nMaterialButton.prototype.blurHandler = function(event) {\n  'use strict';\n\n  if (event) {\n    this.element_.blur();\n  }\n};\n\n// Public methods.\n\n/**\n * Disable button.\n * @public\n */\nMaterialButton.prototype.disable = function() {\n  'use strict';\n\n  this.element_.disabled = true;\n};\n\n/**\n * Enable button.\n * @public\n */\nMaterialButton.prototype.enable = function() {\n  'use strict';\n\n  this.element_.disabled = false;\n};\n\n/**\n * Initialize element.\n */\nMaterialButton.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n      rippleContainer.appendChild(ripple);\n      ripple.addEventListener('mouseup', this.blurHandler.bind(this));\n      this.element_.appendChild(rippleContainer);\n    }\n    this.element_.addEventListener('mouseup', this.blurHandler.bind(this));\n    this.element_.addEventListener('mouseleave', this.blurHandler.bind(this));\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialButton,\n  classAsString: 'MaterialButton',\n  cssClass: 'mdl-js-button'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Checkbox WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialCheckbox(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialCheckbox.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialCheckbox.prototype.CssClasses_ = {\n  INPUT: 'mdl-checkbox__input',\n  BOX_OUTLINE: 'mdl-checkbox__box-outline',\n  FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n  TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked',\n  IS_UPGRADED: 'is-upgraded'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_();\n};\n\n/**\n * Handle focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialCheckbox.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.inputElement_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.inputElement_.checked) {\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialCheckbox.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.inputElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable checkbox.\n * @public\n */\nMaterialCheckbox.prototype.disable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable checkbox.\n * @public\n */\nMaterialCheckbox.prototype.enable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Check checkbox.\n * @public\n */\nMaterialCheckbox.prototype.check = function() {\n  'use strict';\n\n  this.inputElement_.checked = true;\n  this.updateClasses_();\n};\n\n/**\n * Uncheck checkbox.\n * @public\n */\nMaterialCheckbox.prototype.uncheck = function() {\n  'use strict';\n\n  this.inputElement_.checked = false;\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialCheckbox.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.inputElement_ = this.element_.querySelector('.' +\n        this.CssClasses_.INPUT);\n\n    var boxOutline = document.createElement('span');\n    boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n\n    var tickContainer = document.createElement('span');\n    tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n\n    var tickOutline = document.createElement('span');\n    tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n\n    boxOutline.appendChild(tickOutline);\n\n    this.element_.appendChild(tickContainer);\n    this.element_.appendChild(boxOutline);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.inputElement_.addEventListener('change', this.onChange_.bind(this));\n    this.inputElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.inputElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateClasses_();\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialCheckbox,\n  classAsString: 'MaterialCheckbox',\n  cssClass: 'mdl-js-checkbox'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Column Layout WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialColumnLayout(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialColumnLayout.prototype.Constant_ = {\n  INVISIBLE_WRAPPING_ELEMENT_COUNT: 3\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialColumnLayout.prototype.CssClasses_ = {\n  /**\n   * Class names should use camelCase and be prefixed with the word \"material\"\n   * to minimize conflict with 3rd party systems.\n   */\n\n  // TODO: Upgrade classnames in HTML / CSS / JS to use material prefix to\n  // reduce conflict and convert to camelCase for consistency.\n  INVISIBLE_WRAPPING_ELEMENT: 'mdl-column-layout__wrap-hack'\n};\n\n\n/**\n * Initialize element.\n */\nMaterialColumnLayout.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    // Add some hidden elements to make sure everything aligns correctly. See\n    // CSS file for details.\n    for (var j = 0; j < this.Constant_.INVISIBLE_WRAPPING_ELEMENT_COUNT ; j++) {\n      var hiddenHackDiv = document.createElement('div');\n      hiddenHackDiv.classList.add(this.CssClasses_.INVISIBLE_WRAPPING_ELEMENT);\n      this.element_.appendChild(hiddenHackDiv);\n    }\n  }\n};\n\n\n//The component registers itself. It can assume componentHandler is available\n//in the global scope.\ncomponentHandler.register({\n  constructor: MaterialColumnLayout,\n  classAsString: 'MaterialColumnLayout',\n  cssClass: 'mdl-column-layout'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for icon toggle WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialIconToggle(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialIconToggle.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialIconToggle.prototype.CssClasses_ = {\n  INPUT: 'mdl-icon-toggle__input',\n  JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_();\n};\n\n/**\n * Handle focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialIconToggle.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.inputElement_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.inputElement_.checked) {\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialIconToggle.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.inputElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.disable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.enable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Check icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.check = function() {\n  'use strict';\n\n  this.inputElement_.checked = true;\n  this.updateClasses_();\n};\n\n/**\n * Uncheck icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.uncheck = function() {\n  'use strict';\n\n  this.inputElement_.checked = false;\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialIconToggle.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.inputElement_ =\n        this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.inputElement_.addEventListener('change', this.onChange_.bind(this));\n    this.inputElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.inputElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateClasses_();\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialIconToggle,\n  classAsString: 'MaterialIconToggle',\n  cssClass: 'mdl-js-icon-toggle'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for dropdown WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialMenu(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialMenu.prototype.Constant_ = {\n  // Total duration of the menu animation.\n  TRANSITION_DURATION_SECONDS: 0.3,\n  // The fraction of the total duration we want to use for menu item animations.\n  TRANSITION_DURATION_FRACTION: 0.8,\n  // How long the menu stays open after choosing an option (so the user can see\n  // the ripple).\n  CLOSE_TIMEOUT: 150\n};\n\n/**\n * Keycodes, for code readability.\n * @enum {number}\n * @private\n */\nMaterialMenu.prototype.Keycodes_ = {\n  ENTER: 13,\n  ESCAPE: 27,\n  SPACE: 32,\n  UP_ARROW: 38,\n  DOWN_ARROW: 40\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialMenu.prototype.CssClasses_ = {\n  CONTAINER: 'mdl-menu__container',\n  OUTLINE: 'mdl-menu__outline',\n  ITEM: 'mdl-menu__item',\n  ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE: 'mdl-ripple',\n  // Statuses\n  IS_UPGRADED: 'is-upgraded',\n  IS_VISIBLE: 'is-visible',\n  IS_ANIMATING: 'is-animating',\n  // Alignment options\n  BOTTOM_LEFT: 'mdl-menu--bottom-left',  // This is the default.\n  BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n  TOP_LEFT: 'mdl-menu--top-left',\n  TOP_RIGHT: 'mdl-menu--top-right',\n  UNALIGNED: 'mdl-menu--unaligned'\n};\n\n/**\n * Initialize element.\n */\nMaterialMenu.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    // Create container for the menu.\n    var container = document.createElement('div');\n    container.classList.add(this.CssClasses_.CONTAINER);\n    this.element_.parentElement.insertBefore(container, this.element_);\n    this.element_.parentElement.removeChild(this.element_);\n    container.appendChild(this.element_);\n    this.container_ = container;\n\n    // Create outline for the menu (shadow and background).\n    var outline = document.createElement('div');\n    outline.classList.add(this.CssClasses_.OUTLINE);\n    this.outline_ = outline;\n    container.insertBefore(outline, this.element_);\n\n    // Find the \"for\" element and bind events to it.\n    var forElId = this.element_.getAttribute('for');\n    var forEl = null;\n    if (forElId) {\n      forEl = document.getElementById(forElId);\n      if (forEl) {\n        this.forElement_ = forEl;\n        forEl.addEventListener('click', this.handleForClick_.bind(this));\n        forEl.addEventListener('keydown',\n            this.handleForKeyboardEvent_.bind(this));\n      }\n    }\n\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\n    for (var i = 0; i < items.length; i++) {\n      // Add a listener to each menu item.\n      items[i].addEventListener('click', this.handleItemClick_.bind(this));\n      // Add a tab index to each menu item.\n      items[i].tabIndex = '-1';\n      // Add a keyboard listener to each menu item.\n      items[i].addEventListener('keydown',\n          this.handleItemKeyboardEvent_.bind(this));\n    }\n\n    // Add ripple classes to each item, if the user has enabled ripples.\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\n      for (i = 0; i < items.length; i++) {\n        var item = items[i];\n\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(ripple);\n\n        item.appendChild(rippleContainer);\n        item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      }\n    }\n\n    // Copy alignment classes to the container, so the outline can use them.\n    if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n      this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n      this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n      this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n      this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n      this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n    }\n\n    container.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n/**\n * Handles a click on the \"for\" element, by positioning the menu and then\n * toggling it.\n * @private\n */\nMaterialMenu.prototype.handleForClick_ = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.forElement_) {\n    var rect = this.forElement_.getBoundingClientRect();\n    var forRect = this.forElement_.parentElement.getBoundingClientRect();\n\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n      // Do not position the menu automatically. Requires the developer to\n      // manually specify position.\n    } else if (this.element_.classList.contains(\n        this.CssClasses_.BOTTOM_RIGHT)) {\n      // Position below the \"for\" element, aligned to its right.\n      this.container_.style.right = (forRect.right - rect.right) + 'px';\n      this.container_.style.top =\n          this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n      // Position above the \"for\" element, aligned to its left.\n      this.container_.style.left = this.forElement_.offsetLeft + 'px';\n      this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n      // Position above the \"for\" element, aligned to its right.\n      this.container_.style.right = (forRect.right - rect.right) + 'px';\n      this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n    } else {\n      // Default: position below the \"for\" element, aligned to its left.\n      this.container_.style.left = this.forElement_.offsetLeft + 'px';\n      this.container_.style.top =\n          this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n    }\n  }\n\n  this.toggle(evt);\n};\n\n/**\n * Handles a keyboard event on the \"for\" element.\n * @private\n */\nMaterialMenu.prototype.handleForKeyboardEvent_ = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.container_ && this.forElement_) {\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n      ':not([disabled])');\n\n    if (items && items.length > 0 &&\n        this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n      if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n        evt.preventDefault();\n        items[items.length - 1].focus();\n      } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n        evt.preventDefault();\n        items[0].focus();\n      }\n    }\n  }\n};\n\n/**\n * Handles a keyboard event on an item.\n * @private\n */\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.container_) {\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n      ':not([disabled])');\n\n    if (items && items.length > 0 &&\n        this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n      var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n\n      if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n        evt.preventDefault();\n        if (currentIndex > 0) {\n          items[currentIndex - 1].focus();\n        } else {\n          items[items.length - 1].focus();\n        }\n      } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n        evt.preventDefault();\n        if (items.length > currentIndex + 1) {\n          items[currentIndex + 1].focus();\n        } else {\n          items[0].focus();\n        }\n      } else if (evt.keyCode === this.Keycodes_.SPACE ||\n            evt.keyCode === this.Keycodes_.ENTER) {\n        evt.preventDefault();\n        // Send mousedown and mouseup to trigger ripple.\n        var e = new MouseEvent('mousedown');\n        evt.target.dispatchEvent(e);\n        e = new MouseEvent('mouseup');\n        evt.target.dispatchEvent(e);\n        // Send click.\n        evt.target.click();\n      } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n        evt.preventDefault();\n        this.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles a click event on an item.\n * @private\n */\nMaterialMenu.prototype.handleItemClick_ = function(evt) {\n  'use strict';\n\n  if (evt.target.getAttribute('disabled') !== null) {\n    evt.stopPropagation();\n  } else {\n    // Wait some time before closing menu, so the user can see the ripple.\n    this.closing_ = true;\n    window.setTimeout(function(evt) {\n      this.hide();\n      this.closing_ = false;\n    }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n  }\n};\n\n/**\n * Calculates the initial clip (for opening the menu) or final clip (for closing\n * it), and applies it. This allows us to animate from or to the correct point,\n * that is, the point it's aligned to in the \"for\" element.\n * @private\n */\nMaterialMenu.prototype.applyClip_ = function(height, width) {\n  'use strict';\n\n  if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n    // Do not clip.\n    this.element_.style.clip = null;\n  } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n    // Clip to the top right corner of the menu.\n    this.element_.style.clip =\n        'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n  } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n    // Clip to the bottom left corner of the menu.\n    this.element_.style.clip =\n        'rect(' + height + 'px 0 ' + height + 'px 0)';\n  } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n    // Clip to the bottom right corner of the menu.\n    this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' +\n        height + 'px ' + width + 'px)';\n  } else {\n    // Default: do not clip (same as clipping to the top left corner).\n    this.element_.style.clip = null;\n  }\n};\n\n/**\n * Adds an event listener to clean up after the animation ends.\n * @private\n */\nMaterialMenu.prototype.addAnimationEndListener_ = function() {\n  'use strict';\n\n  var cleanup = function() {\n    this.element_.classList.remove(this.CssClasses_.IS_ANIMATING);\n  }.bind(this);\n\n  // Remove animation class once the transition is done.\n  this.element_.addEventListener('transitionend', cleanup);\n  this.element_.addEventListener('webkitTransitionEnd', cleanup);\n};\n\n/**\n * Displays the menu.\n * @public\n */\nMaterialMenu.prototype.show = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.container_ && this.outline_) {\n    // Measure the inner element.\n    var height = this.element_.getBoundingClientRect().height;\n    var width = this.element_.getBoundingClientRect().width;\n\n    // Apply the inner element's size to the container and outline.\n    this.container_.style.width = width + 'px';\n    this.container_.style.height = height + 'px';\n    this.outline_.style.width = width + 'px';\n    this.outline_.style.height = height + 'px';\n\n    var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS *\n        this.Constant_.TRANSITION_DURATION_FRACTION;\n\n    // Calculate transition delays for individual menu items, so that they fade\n    // in one at a time.\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n    for (var i = 0; i < items.length; i++) {\n      var itemDelay = null;\n      if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) ||\n          this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        itemDelay = ((height - items[i].offsetTop - items[i].offsetHeight) /\n            height * transitionDuration) + 's';\n      } else {\n        itemDelay = (items[i].offsetTop / height * transitionDuration) + 's';\n      }\n      items[i].style.transitionDelay = itemDelay;\n    }\n\n    // Apply the initial clip to the text before we start animating.\n    this.applyClip_(height, width);\n\n    // Wait for the next frame, turn on animation, and apply the final clip.\n    // Also make it visible. This triggers the transitions.\n    window.requestAnimationFrame(function() {\n      this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n      this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n      this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n    }.bind(this));\n\n    // Clean up after the animation is complete.\n    this.addAnimationEndListener_();\n\n    // Add a click listener to the document, to close the menu.\n    var callback = function(e) {\n      // Check to see if the document is processing the same event that\n      // displayed the menu in the first place. If so, do nothing.\n      // Also check to see if the menu is in the process of closing itself, and\n      // do nothing in that case.\n      if (e !== evt && !this.closing_) {\n        document.removeEventListener('click', callback);\n        this.hide();\n      }\n    }.bind(this);\n    document.addEventListener('click', callback);\n  }\n};\n\n/**\n * Hides the menu.\n * @public\n */\nMaterialMenu.prototype.hide = function() {\n  'use strict';\n\n  if (this.element_ && this.container_ && this.outline_) {\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\n    // Remove all transition delays; menu items fade out concurrently.\n    for (var i = 0; i < items.length; i++) {\n      items[i].style.transitionDelay = null;\n    }\n\n    // Measure the inner element.\n    var height = this.element_.getBoundingClientRect().height;\n    var width = this.element_.getBoundingClientRect().width;\n\n    // Turn on animation, and apply the final clip. Also make invisible.\n    // This triggers the transitions.\n    this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n    this.applyClip_(height, width);\n    this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n\n    // Clean up after the animation is complete.\n    this.addAnimationEndListener_();\n  }\n};\n\n/**\n * Displays or hides the menu, depending on current state.\n * @public\n */\nMaterialMenu.prototype.toggle = function(evt) {\n  'use strict';\n\n  if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n    this.hide();\n  } else {\n    this.show(evt);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialMenu,\n  classAsString: 'MaterialMenu',\n  cssClass: 'mdl-js-menu'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Progress WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialProgress(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialProgress.prototype.Constant_ = {\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialProgress.prototype.CssClasses_ = {\n  INDETERMINATE_CLASS: 'mdl-progress__indeterminate'\n};\n\nMaterialProgress.prototype.setProgress = function(p) {\n  'use strict';\n\n  if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n    return;\n  }\n\n  this.progressbar_.style.width = p + '%';\n};\n\nMaterialProgress.prototype.setBuffer = function(p) {\n  'use strict';\n\n  this.bufferbar_.style.width = p + '%';\n  this.auxbar_.style.width = (100-p) + '%';\n};\n\n/**\n * Initialize element.\n */\nMaterialProgress.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var el = document.createElement('div');\n    el.className = 'progressbar bar bar1';\n    this.element_.appendChild(el);\n    this.progressbar_ = el;\n\n    el = document.createElement('div');\n    el.className = 'bufferbar bar bar2';\n    this.element_.appendChild(el);\n    this.bufferbar_ = el;\n\n    el = document.createElement('div');\n    el.className = 'auxbar bar bar3';\n    this.element_.appendChild(el);\n    this.auxbar_ = el;\n\n    this.progressbar_.style.width = '0%';\n    this.bufferbar_.style.width = '100%';\n    this.auxbar_.style.width = '0%';\n\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialProgress,\n  classAsString: 'MaterialProgress',\n  cssClass: 'mdl-js-progress'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Radio WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialRadio(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialRadio.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialRadio.prototype.CssClasses_ = {\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked',\n  IS_UPGRADED: 'is-upgraded',\n  JS_RADIO: 'mdl-js-radio',\n  RADIO_BTN: 'mdl-radio__button',\n  RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n  RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_(this.btnElement_, this.element_);\n\n  // Since other radio buttons don't get change events, we need to look for\n  // them to update their classes.\n  var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n  for (var i = 0; i < radios.length; i++) {\n    var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n    // Different name == different group, so no point updating those.\n    if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n      this.updateClasses_(button, radios[i]);\n    }\n  }\n};\n\n/**\n * Handle focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onMouseup_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Update classes.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialRadio.prototype.updateClasses_ = function(button, label) {\n  'use strict';\n\n  if (button.disabled) {\n    label.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    label.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (button.checked) {\n    label.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    label.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialRadio.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.btnElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable radio.\n * @public\n */\nMaterialRadio.prototype.disable = function() {\n  'use strict';\n\n  this.btnElement_.disabled = true;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Enable radio.\n * @public\n */\nMaterialRadio.prototype.enable = function() {\n  'use strict';\n\n  this.btnElement_.disabled = false;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Check radio.\n * @public\n */\nMaterialRadio.prototype.check = function() {\n  'use strict';\n\n  this.btnElement_.checked = true;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Uncheck radio.\n * @public\n */\nMaterialRadio.prototype.uncheck = function() {\n  'use strict';\n\n  this.btnElement_.checked = false;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Initialize element.\n */\nMaterialRadio.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.btnElement_ = this.element_.querySelector('.' +\n        this.CssClasses_.RADIO_BTN);\n\n    var outerCircle = document.createElement('span');\n    outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n\n    var innerCircle = document.createElement('span');\n    innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n\n    this.element_.appendChild(outerCircle);\n    this.element_.appendChild(innerCircle);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(\n        this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(\n          this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(\n          this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseup_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.btnElement_.addEventListener('change', this.onChange_.bind(this));\n    this.btnElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.btnElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseup_.bind(this));\n\n    this.updateClasses_(this.btnElement_, this.element_);\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialRadio,\n  classAsString: 'MaterialRadio',\n  cssClass: 'mdl-js-radio'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Slider WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialSlider(element) {\n  'use strict';\n\n  this.element_ = element;\n  // Browser feature detection.\n  this.isIE_ = window.navigator.msPointerEnabled;\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialSlider.prototype.Constant_ = {\n  // None for now.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialSlider.prototype.CssClasses_ = {\n  IE_CONTAINER: 'mdl-slider__ie-container',\n  SLIDER_CONTAINER: 'mdl-slider__container',\n  BACKGROUND_FLEX: 'mdl-slider__background-flex',\n  BACKGROUND_LOWER: 'mdl-slider__background-lower',\n  BACKGROUND_UPPER: 'mdl-slider__background-upper',\n  IS_LOWEST_VALUE: 'is-lowest-value',\n  IS_UPGRADED: 'is-upgraded'\n};\n\n/**\n * Handle input on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.onInput_ = function(event) {\n  'use strict';\n\n  this.updateValueStyles_();\n};\n\n/**\n * Handle change on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateValueStyles_();\n};\n\n/**\n * Handle mouseup on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  event.target.blur();\n};\n\n/**\n * Handle updating of values.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.updateValueStyles_ = function(event) {\n  'use strict';\n\n  // Calculate and apply percentages to div structure behind slider.\n  var fraction = (this.element_.value - this.element_.min) /\n      (this.element_.max - this.element_.min);\n\n  if (fraction === 0) {\n    this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n  }\n\n  if (!this.isIE_) {\n    this.backgroundLower_.style.flex = fraction;\n    this.backgroundLower_.style.webkitFlex = fraction;\n    this.backgroundUpper_.style.flex = 1 - fraction;\n    this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n  }\n};\n\n// Public methods.\n\n/**\n * Disable slider.\n * @public\n */\nMaterialSlider.prototype.disable = function() {\n  'use strict';\n\n  this.element_.disabled = true;\n};\n\n/**\n * Enable slider.\n * @public\n */\nMaterialSlider.prototype.enable = function() {\n  'use strict';\n\n  this.element_.disabled = false;\n};\n\n/**\n * Update slider value.\n * @param {Number} value The value to which to set the control (optional).\n * @public\n */\nMaterialSlider.prototype.change = function(value) {\n  'use strict';\n\n  if (value) {\n    this.element_.value = value;\n  }\n  this.updateValueStyles_();\n};\n\n/**\n * Initialize element.\n */\nMaterialSlider.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    if (this.isIE_) {\n      // Since we need to specify a very large height in IE due to\n      // implementation limitations, we add a parent here that trims it down to\n      // a reasonable size.\n      var containerIE = document.createElement('div');\n      containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n      this.element_.parentElement.insertBefore(containerIE, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      containerIE.appendChild(this.element_);\n    } else {\n      // For non-IE browsers, we need a div structure that sits behind the\n      // slider and allows us to style the left and right sides of it with\n      // different colors.\n      var container = document.createElement('div');\n      container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n      this.element_.parentElement.insertBefore(container, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      container.appendChild(this.element_);\n      var backgroundFlex = document.createElement('div');\n      backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n      container.appendChild(backgroundFlex);\n      this.backgroundLower_ = document.createElement('div');\n      this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n      backgroundFlex.appendChild(this.backgroundLower_);\n      this.backgroundUpper_ = document.createElement('div');\n      this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n      backgroundFlex.appendChild(this.backgroundUpper_);\n    }\n\n    this.element_.addEventListener('input', this.onInput_.bind(this));\n    this.element_.addEventListener('change', this.onChange_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateValueStyles_();\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialSlider,\n  classAsString: 'MaterialSlider',\n  cssClass: 'mdl-js-slider'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Spinner WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialSpinner(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialSpinner.prototype.Constant_ = {\n  WSK_SPINNER_LAYER_COUNT: 4\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialSpinner.prototype.CssClasses_ = {\n  WSK_SPINNER_LAYER: 'mdl-spinner__layer',\n  WSK_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n  WSK_SPINNER_CIRCLE: 'mdl-spinner__circle',\n  WSK_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n  WSK_SPINNER_LEFT: 'mdl-spinner__left',\n  WSK_SPINNER_RIGHT: 'mdl-spinner__right'\n};\n\n/**\n* Auxiliary method to create a spinner layer.\n*/\nMaterialSpinner.prototype.createLayer = function(index) {\n  'use strict';\n\n  var layer = document.createElement('div');\n  layer.classList.add(this.CssClasses_.WSK_SPINNER_LAYER);\n  layer.classList.add(this.CssClasses_.WSK_SPINNER_LAYER + '-' + index);\n\n  var leftClipper = document.createElement('div');\n  leftClipper.classList.add(this.CssClasses_.WSK_SPINNER_CIRCLE_CLIPPER);\n  leftClipper.classList.add(this.CssClasses_.WSK_SPINNER_LEFT);\n\n  var gapPatch = document.createElement('div');\n  gapPatch.classList.add(this.CssClasses_.WSK_SPINNER_GAP_PATCH);\n\n  var rightClipper = document.createElement('div');\n  rightClipper.classList.add(this.CssClasses_.WSK_SPINNER_CIRCLE_CLIPPER);\n  rightClipper.classList.add(this.CssClasses_.WSK_SPINNER_RIGHT);\n\n  var circleOwners = [leftClipper, gapPatch, rightClipper];\n\n  for (var i = 0; i < circleOwners.length; i++) {\n    var circle = document.createElement('div');\n    circle.classList.add(this.CssClasses_.WSK_SPINNER_CIRCLE);\n    circleOwners[i].appendChild(circle);\n  }\n\n  layer.appendChild(leftClipper);\n  layer.appendChild(gapPatch);\n  layer.appendChild(rightClipper);\n\n  this.element_.appendChild(layer);\n};\n\n/**\n* Stops the spinner animation.\n* Public method for users who need to stop the spinner for any reason.\n* @public\n*/\nMaterialSpinner.prototype.stop = function() {\n  'use strict';\n\n  this.element_.classList.remove('is-active');\n};\n\n/**\n* Starts the spinner animation.\n* Public method for users who need to manually start the spinner for any reason\n* (instead of just adding the 'is-active' class to their markup).\n* @public\n*/\nMaterialSpinner.prototype.start = function() {\n  'use strict';\n\n  this.element_.classList.add('is-active');\n};\n\n/**\n * Initialize element.\n */\nMaterialSpinner.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    for (var i = 1; i <= this.Constant_.WSK_SPINNER_LAYER_COUNT; i++) {\n      this.createLayer(i);\n    }\n\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialSpinner,\n  classAsString: 'MaterialSpinner',\n  cssClass: 'mdl-js-spinner'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Checkbox WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialSwitch(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialSwitch.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialSwitch.prototype.CssClasses_ = {\n  INPUT: 'mdl-switch__input',\n  TRACK: 'mdl-switch__track',\n  THUMB: 'mdl-switch__thumb',\n  FOCUS_HELPER: 'mdl-switch__focus-helper',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_();\n};\n\n/**\n * Handle focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialSwitch.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.inputElement_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.inputElement_.checked) {\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialSwitch.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.inputElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable switch.\n * @public\n */\nMaterialSwitch.prototype.disable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable switch.\n * @public\n */\nMaterialSwitch.prototype.enable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Activate switch.\n * @public\n */\nMaterialSwitch.prototype.on = function() {\n  'use strict';\n\n  this.inputElement_.checked = true;\n  this.updateClasses_();\n};\n\n/**\n * Deactivate switch.\n * @public\n */\nMaterialSwitch.prototype.off = function() {\n  'use strict';\n\n  this.inputElement_.checked = false;\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialSwitch.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.inputElement_ = this.element_.querySelector('.' +\n        this.CssClasses_.INPUT);\n\n    var track = document.createElement('div');\n    track.classList.add(this.CssClasses_.TRACK);\n\n    var thumb = document.createElement('div');\n    thumb.classList.add(this.CssClasses_.THUMB);\n\n    var focusHelper = document.createElement('span');\n    focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n\n    thumb.appendChild(focusHelper);\n\n    this.element_.appendChild(track);\n    this.element_.appendChild(thumb);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(\n        this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(\n          this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(\n          this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.inputElement_.addEventListener('change', this.onChange_.bind(this));\n    this.inputElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.inputElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateClasses_();\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialSwitch,\n  classAsString: 'MaterialSwitch',\n  cssClass: 'mdl-js-switch'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Tabs WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialTabs(element) {\n  'use strict';\n\n  // Stores the HTML element.\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string}\n * @private\n */\nMaterialTabs.prototype.Constant_ = {\n  // None at the moment.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialTabs.prototype.CssClasses_ = {\n  TAB_CLASS: 'mdl-tabs__tab',\n  PANEL_CLASS: 'mdl-tabs__panel',\n  ACTIVE_CLASS: 'is-active',\n  UPGRADED_CLASS: 'is-upgraded',\n\n  WSK_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  WSK_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n  WSK_RIPPLE: 'mdl-ripple',\n  WSK_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n};\n\n/**\n * Handle clicks to a tabs component\n * @private\n */\nMaterialTabs.prototype.initTabs_ = function(e) {\n  'use strict';\n\n  if (this.element_.classList.contains(this.CssClasses_.WSK_JS_RIPPLE_EFFECT)) {\n    this.element_.classList.add(\n      this.CssClasses_.WSK_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n  }\n\n  // Select element tabs, document panels\n  this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n  this.panels_ =\n      this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n\n  // Create new tabs for each tab element\n  for (var i = 0; i < this.tabs_.length; i++) {\n    new MaterialTab(this.tabs_[i], this);\n  }\n\n  this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n};\n\n/**\n * Reset tab state, dropping active classes\n * @private\n */\nMaterialTabs.prototype.resetTabState_ = function() {\n  'use strict';\n\n  for (var k = 0; k < this.tabs_.length; k++) {\n    this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\n/**\n * Reset panel state, droping active classes\n * @private\n */\nMaterialTabs.prototype.resetPanelState_ = function() {\n  'use strict';\n\n  for (var j = 0; j < this.panels_.length; j++) {\n    this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\nMaterialTabs.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.initTabs_();\n  }\n};\n\nfunction MaterialTab(tab, ctx) {\n  'use strict';\n\n  if (tab) {\n    if (ctx.element_.classList.contains(ctx.CssClasses_.WSK_JS_RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(ctx.CssClasses_.WSK_RIPPLE_CONTAINER);\n      rippleContainer.classList.add(ctx.CssClasses_.WSK_JS_RIPPLE_EFFECT);\n      var ripple = document.createElement('span');\n      ripple.classList.add(ctx.CssClasses_.WSK_RIPPLE);\n      rippleContainer.appendChild(ripple);\n      tab.appendChild(rippleContainer);\n    }\n\n    tab.addEventListener('click', function(e) {\n      e.preventDefault();\n      var href = tab.href.split('#')[1];\n      var panel = ctx.element_.querySelector('#' + href);\n      ctx.resetTabState_();\n      ctx.resetPanelState_();\n      tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n      panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n    });\n\n  }\n}\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialTabs,\n  classAsString: 'MaterialTabs',\n  cssClass: 'mdl-js-tabs'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Textfield WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialTextfield(element) {\n  'use strict';\n\n  this.element_ = element;\n  this.maxRows = this.Constant_.NO_MAX_ROWS;\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialTextfield.prototype.Constant_ = {\n  NO_MAX_ROWS: -1,\n  MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialTextfield.prototype.CssClasses_ = {\n  LABEL: 'mdl-textfield__label',\n  INPUT: 'mdl-textfield__input',\n  IS_DIRTY: 'is-dirty',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_INVALID: 'is-invalid',\n  IS_UPGRADED: 'is-upgraded'\n};\n\n/**\n * Handle input being entered.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onKeyDown_ = function(event) {\n  'use strict';\n\n  var currentRowCount = event.target.value.split('\\n').length;\n  if (event.keyCode === 13) {\n    if (currentRowCount >= this.maxRows) {\n      event.preventDefault();\n    }\n  }\n};\n\n/**\n * Handle focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialTextfield.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.input_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.input_.validity.valid) {\n    this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n  } else {\n    this.element_.classList.add(this.CssClasses_.IS_INVALID);\n  }\n\n  if (this.input_.value && this.input_.value.length > 0) {\n    this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n  }\n};\n\n// Public methods.\n\n/**\n * Disable text field.\n * @public\n */\nMaterialTextfield.prototype.disable = function() {\n  'use strict';\n\n  this.input_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable text field.\n * @public\n */\nMaterialTextfield.prototype.enable = function() {\n  'use strict';\n\n  this.input_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Update text field value.\n * @param {String} value The value to which to set the control (optional).\n * @public\n */\nMaterialTextfield.prototype.change = function(value) {\n  'use strict';\n\n  if (value) {\n    this.input_.value = value;\n  }\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialTextfield.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n    this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n    if (this.input_) {\n      if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n        this.maxRows = parseInt(this.input_.getAttribute(\n            this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n        if (isNaN(this.maxRows)) {\n          this.maxRows = this.Constant_.NO_MAX_ROWS;\n        }\n      }\n\n      this.input_.addEventListener('input', this.updateClasses_.bind(this));\n      this.input_.addEventListener('focus', this.onFocus_.bind(this));\n      this.input_.addEventListener('blur', this.onBlur_.bind(this));\n\n      if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n        // TODO: This should handle pasting multi line text.\n        // Currently doesn't.\n        this.input_.addEventListener('keydown', this.onKeyDown_.bind(this));\n      }\n\n      this.updateClasses_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialTextfield,\n  classAsString: 'MaterialTextfield',\n  cssClass: 'mdl-js-textfield'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Tooltip WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialTooltip(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialTooltip.prototype.Constant_ = {\n  // None for now.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialTooltip.prototype.CssClasses_ = {\n  IS_ACTIVE: 'is-active'\n};\n\n\n/**\n * Handle mouseenter for tooltip.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTooltip.prototype.handleMouseEnter_ = function(event) {\n  'use strict';\n\n  event.stopPropagation();\n  var props = event.target.getBoundingClientRect();\n  this.element_.style.left = props.left + (props.width / 2) + 'px';\n  this.element_.style.marginLeft = -1 * (this.element_.offsetWidth / 2) + 'px';\n  this.element_.style.top = props.top + props.height + 10 + 'px';\n  this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n};\n\n\n/**\n * Handle mouseleave for tooltip.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTooltip.prototype.handleMouseLeave_ = function(event) {\n  'use strict';\n\n  event.stopPropagation();\n  this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n};\n\n\n/**\n * Initialize element.\n */\nMaterialTooltip.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var forElId = this.element_.getAttribute('for');\n    var forEl = null;\n\n    if (forElId) {\n      forEl = document.getElementById(forElId);\n    }\n\n    if (forEl) {\n      forEl.addEventListener('mouseenter', this.handleMouseEnter_.bind(this),\n          false);\n      forEl.addEventListener('mouseleave', this.handleMouseLeave_.bind(this));\n    }\n  }\n};\n\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialTooltip,\n  classAsString: 'MaterialTooltip',\n  cssClass: 'mdl-tooltip'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Layout WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialLayout(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialLayout.prototype.Constant_ = {\n  MAX_WIDTH: '(max-width: 850px)'\n};\n\n/**\n * Modes.\n * @enum {number}\n * @private\n */\nMaterialLayout.prototype.Mode_ = {\n  STANDARD: 0,\n  SEAMED: 1,\n  WATERFALL: 2,\n  SCROLL: 3\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialLayout.prototype.CssClasses_ = {\n  HEADER: 'mdl-layout__header',\n  DRAWER: 'mdl-layout__drawer',\n  CONTENT: 'mdl-layout__content',\n  DRAWER_BTN: 'mdl-layout__drawer-button',\n\n  JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n  RIPPLE: 'mdl-ripple',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n\n  HEADER_SEAMED: 'mdl-layout__header--seamed',\n  HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n  HEADER_SCROLL: 'mdl-layout__header--scroll',\n\n  FIXED_HEADER: 'mdl-layout--fixed-header',\n  OBFUSCATOR: 'mdl-layout__obfuscator',\n\n  TAB_BAR: 'mdl-layout__tab-bar',\n  TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n  TAB: 'mdl-layout__tab',\n  TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n  TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n  TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n  PANEL: 'mdl-layout__tab-panel',\n\n  HAS_DRAWER_CLASS: 'has-drawer',\n  SHADOW_CLASS: 'is-casting-shadow',\n  COMPACT_CLASS: 'is-compact',\n  SMALL_SCREEN_CLASS: 'is-small-screen',\n  DRAWER_OPEN_CLASS: 'is-visible',\n  ACTIVE_CLASS: 'is-active',\n  UPGRADED_CLASS: 'is-upgraded',\n  ANIMATING_CLASS: 'is-animating'\n};\n\n/**\n * Handles scrolling on the content.\n * @private\n */\nMaterialLayout.prototype.contentScrollHandler_ = function() {\n  'use strict';\n\n  if(this.header_.classList.contains(this.CssClasses_.ANIMATING_CLASS)) {\n    return;\n  }\n\n  if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.COMPACT_CLASS)) {\n    this.header_.classList.add(this.CssClasses_.SHADOW_CLASS);\n    this.header_.classList.add(this.CssClasses_.COMPACT_CLASS);\n    this.header_.classList.add(this.CssClasses_.ANIMATING_CLASS);\n  } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.COMPACT_CLASS)) {\n    this.header_.classList.remove(this.CssClasses_.SHADOW_CLASS);\n    this.header_.classList.remove(this.CssClasses_.COMPACT_CLASS);\n    this.header_.classList.add(this.CssClasses_.ANIMATING_CLASS);\n  }\n};\n\n/**\n * Handles changes in screen size.\n * @private\n */\nMaterialLayout.prototype.screenSizeHandler_ = function() {\n  'use strict';\n\n  if (this.screenSizeMediaQuery_.matches) {\n    this.element_.classList.add(this.CssClasses_.SMALL_SCREEN_CLASS);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.SMALL_SCREEN_CLASS);\n    // Collapse drawer (if any) when moving to a large screen size.\n    if (this.drawer_) {\n      this.drawer_.classList.remove(this.CssClasses_.DRAWER_OPEN_CLASS);\n    }\n  }\n};\n\n/**\n * Handles toggling of the drawer.\n * @param {Element} drawer The drawer container element.\n * @private\n */\nMaterialLayout.prototype.drawerToggleHandler_ = function() {\n  'use strict';\n\n  this.drawer_.classList.toggle(this.CssClasses_.DRAWER_OPEN_CLASS);\n};\n\n/**\n * Handles (un)setting the `is-animating` class\n */\nMaterialLayout.prototype.headerTransitionEndHandler = function() {\n  'use strict';\n\n  this.header_.classList.remove(this.CssClasses_.ANIMATING_CLASS);\n};\n\n/**\n * Handles expanding the header on click\n */\nMaterialLayout.prototype.headerClickHandler = function() {\n  'use strict';\n\n  if (this.header_.classList.contains(this.CssClasses_.COMPACT_CLASS)) {\n    this.header_.classList.remove(this.CssClasses_.COMPACT_CLASS);\n    this.header_.classList.add(this.CssClasses_.ANIMATING_CLASS);\n  }\n};\n\n/**\n * Reset tab state, dropping active classes\n * @private\n */\nMaterialLayout.prototype.resetTabState_ = function(tabBar) {\n  'use strict';\n\n  for (var k = 0; k < tabBar.length; k++) {\n    tabBar[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\n/**\n * Reset panel state, droping active classes\n * @private\n */\nMaterialLayout.prototype.resetPanelState_ = function(panels) {\n  'use strict';\n\n  for (var j = 0; j < panels.length; j++) {\n    panels[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\n/**\n * Initialize element.\n */\nMaterialLayout.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var container = document.createElement('div');\n    container.classList.add('mdl-layout__container');\n    this.element_.parentElement.insertBefore(container, this.element_);\n    this.element_.parentElement.removeChild(this.element_);\n    container.appendChild(this.element_);\n\n    this.header_ = this.element_.querySelector('.' + this.CssClasses_.HEADER);\n    this.drawer_ = this.element_.querySelector('.' + this.CssClasses_.DRAWER);\n    this.tabBar_ = this.element_.querySelector('.' + this.CssClasses_.TAB_BAR);\n    this.content_ = this.element_.querySelector('.' + this.CssClasses_.CONTENT);\n\n    var mode = this.Mode_.STANDARD;\n\n    // Keep an eye on screen size, and add/remove auxiliary class for styling\n    // of small screens.\n    this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n    this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n    this.screenSizeHandler_();\n\n    if (this.header_) {\n      if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n        mode = this.Mode_.SEAMED;\n      } else if (this.header_.classList.contains(\n          this.CssClasses_.HEADER_WATERFALL)) {\n        mode = this.Mode_.WATERFALL;\n        this.header_.addEventListener('transitionend',\n          this.headerTransitionEndHandler.bind(this));\n        this.header_.addEventListener('click',\n          this.headerClickHandler.bind(this));\n      } else if (this.element_.classList.contains(\n          this.CssClasses_.HEADER_SCROLL)) {\n        mode = this.Mode_.SCROLL;\n      }\n\n      if (mode === this.Mode_.STANDARD) {\n        this.header_.classList.add(this.CssClasses_.SHADOW_CLASS);\n        if (this.tabBar_) {\n          this.tabBar_.classList.add(this.CssClasses_.SHADOW_CLASS);\n        }\n      } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n        this.header_.classList.remove(this.CssClasses_.SHADOW_CLASS);\n        if (this.tabBar_) {\n          this.tabBar_.classList.remove(this.CssClasses_.SHADOW_CLASS);\n        }\n      } else if (mode === this.Mode_.WATERFALL) {\n        // Add and remove shadows depending on scroll position.\n        // Also add/remove auxiliary class for styling of the compact version of\n        // the header.\n        this.content_.addEventListener('scroll',\n            this.contentScrollHandler_.bind(this));\n        this.contentScrollHandler_();\n      }\n    }\n\n    // Add drawer toggling button to our layout, if we have an openable drawer.\n    if (this.drawer_) {\n      var drawerButton = document.createElement('div');\n      drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n      drawerButton.addEventListener('click',\n          this.drawerToggleHandler_.bind(this));\n\n      // Add a class if the layout has a drawer, for altering the left padding.\n      // Adds the HAS_DRAWER_CLASS to the elements since this.header_ may or may\n      // not be present.\n      this.element_.classList.add(this.CssClasses_.HAS_DRAWER_CLASS);\n\n      // If we have a fixed header, add the button to the header rather than\n      // the layout.\n      if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n        this.header_.insertBefore(drawerButton, this.header_.firstChild);\n      } else {\n        this.element_.insertBefore(drawerButton, this.content_);\n      }\n\n      var obfuscator = document.createElement('div');\n      obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n      this.element_.appendChild(obfuscator);\n      obfuscator.addEventListener('click',\n          this.drawerToggleHandler_.bind(this));\n    }\n\n    // Initialize tabs, if any.\n    if (this.tabBar_) {\n      var tabContainer = document.createElement('div');\n      tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n      this.element_.insertBefore(tabContainer, this.tabBar_);\n      this.element_.removeChild(this.tabBar_);\n\n      var leftButton = document.createElement('div');\n      leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n      leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n      leftButton.addEventListener('click', function() {\n        this.tabBar_.scrollLeft -= 100;\n      }.bind(this));\n\n      var rightButton = document.createElement('div');\n      rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n      rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n      rightButton.addEventListener('click', function() {\n        this.tabBar_.scrollLeft += 100;\n      }.bind(this));\n\n      tabContainer.appendChild(leftButton);\n      tabContainer.appendChild(this.tabBar_);\n      tabContainer.appendChild(rightButton);\n\n      // Add and remove buttons depending on scroll position.\n      var tabScrollHandler = function() {\n        if (this.tabBar_.scrollLeft > 0) {\n          leftButton.classList.add(this.CssClasses_.ACTIVE_CLASS);\n        } else {\n          leftButton.classList.remove(this.CssClasses_.ACTIVE_CLASS);\n        }\n\n        if (this.tabBar_.scrollLeft <\n            this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n          rightButton.classList.add(this.CssClasses_.ACTIVE_CLASS);\n        } else {\n          rightButton.classList.remove(this.CssClasses_.ACTIVE_CLASS);\n        }\n      }.bind(this);\n\n      this.tabBar_.addEventListener('scroll', tabScrollHandler);\n      tabScrollHandler();\n\n      if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n        this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      }\n\n      // Select element tabs, document panels\n      var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n      var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n\n      // Create new tabs for each tab element\n      for (var i = 0; i < tabs.length; i++) {\n        new MaterialLayoutTab(tabs[i], tabs, panels, this);\n      }\n    }\n\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n  }\n};\n\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {\n  'use strict';\n\n  if (tab) {\n    if (layout.tabBar_.classList.contains(\n        layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n      var ripple = document.createElement('span');\n      ripple.classList.add(layout.CssClasses_.RIPPLE);\n      rippleContainer.appendChild(ripple);\n      tab.appendChild(rippleContainer);\n    }\n\n    tab.addEventListener('click', function(e) {\n      e.preventDefault();\n      var href = tab.href.split('#')[1];\n      var panel = layout.content_.querySelector('#' + href);\n      layout.resetTabState_(tabs);\n      layout.resetPanelState_(panels);\n      tab.classList.add(layout.CssClasses_.ACTIVE_CLASS);\n      panel.classList.add(layout.CssClasses_.ACTIVE_CLASS);\n    });\n\n  }\n}\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialLayout,\n  classAsString: 'MaterialLayout',\n  cssClass: 'mdl-js-layout'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Ripple WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialRipple(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialRipple.prototype.Constant_ = {\n  INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n  INITIAL_SIZE: '1px',\n  INITIAL_OPACITY: '0.4',\n  FINAL_OPACITY: '0',\n  FINAL_SCALE: ''\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialRipple.prototype.CssClasses_ = {\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE: 'mdl-ripple',\n  IS_ANIMATING: 'is-animating',\n  IS_VISIBLE: 'is-visible'\n};\n\n/**\n * Handle mouse / finger down on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRipple.prototype.downHandler_ = function(event) {\n  'use strict';\n\n  this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n\n  if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n    this.ignoringMouseDown_ = false;\n  } else {\n    if (event.type === 'touchstart') {\n      this.ignoringMouseDown_ = true;\n    }\n    var frameCount = this.getFrameCount();\n    if (frameCount > 0) {\n      return;\n    }\n    this.setFrameCount(1);\n    var bound = event.currentTarget.getBoundingClientRect();\n    var x;\n    var y;\n    // Check if we are handling a keyboard click.\n    if (event.clientX === 0 && event.clientY === 0) {\n      x = Math.round(bound.width / 2);\n      y = Math.round(bound.height / 2);\n    } else {\n      var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n      var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n      x = Math.round(clientX - bound.left);\n      y = Math.round(clientY - bound.top);\n    }\n    this.setRippleXY(x, y);\n    this.setRippleStyles(true);\n    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n  }\n};\n\n/**\n * Handle mouse / finger up on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRipple.prototype.upHandler_ = function(event) {\n  'use strict';\n\n  // Don't fire for the artificial \"mouseup\" generated by a double-click.\n  if (event && event.detail !== 2) {\n    this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n  }\n};\n\n/**\n * Initialize element.\n */\nMaterialRipple.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var recentering =\n        this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n    if (!this.element_.classList.contains(\n        this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n      this.rippleElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.RIPPLE);\n      this.frameCount_ = 0;\n      this.rippleSize_ = 0;\n      this.x_ = 0;\n      this.y_ = 0;\n\n      // Touch start produces a compat mouse down event, which would cause a\n      // second ripples. To avoid that, we use this property to ignore the first\n      // mouse down after a touch start.\n      this.ignoringMouseDown_ = false;\n\n      if (this.rippleElement_) {\n        var bound = this.element_.getBoundingClientRect();\n        this.rippleSize_ = Math.sqrt(bound.width * bound.width +\n            bound.height * bound.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n      }\n\n      this.element_.addEventListener('mousedown', this.downHandler_.bind(this));\n      this.element_.addEventListener('touchstart',\n          this.downHandler_.bind(this));\n\n      this.element_.addEventListener('mouseup', this.upHandler_.bind(this));\n      this.element_.addEventListener('mouseleave', this.upHandler_.bind(this));\n      this.element_.addEventListener('touchend', this.upHandler_.bind(this));\n      this.element_.addEventListener('blur', this.upHandler_.bind(this));\n\n      this.getFrameCount = function() {\n        return this.frameCount_;\n      };\n\n      this.setFrameCount = function(fC) {\n        this.frameCount_ = fC;\n      };\n\n      this.getRippleElement = function() {\n        return this.rippleElement_;\n      };\n\n      this.setRippleXY = function(newX, newY) {\n        this.x_ = newX;\n        this.y_ = newY;\n      };\n\n      this.setRippleStyles = function(start) {\n        if (this.rippleElement_ !== null) {\n          var transformString;\n          var scale;\n          var size;\n          var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n\n          if (start) {\n            scale = this.Constant_.INITIAL_SCALE;\n            size = this.Constant_.INITIAL_SIZE;\n          } else {\n            scale = this.Constant_.FINAL_SCALE;\n            size = this.rippleSize_ + 'px';\n            if (recentering) {\n              offset = 'translate(' + bound.width / 2 + 'px, ' +\n                bound.height / 2 + 'px)';\n            }\n          }\n\n          transformString = 'translate(-50%, -50%) ' + offset + scale;\n\n          this.rippleElement_.style.webkitTransform = transformString;\n          this.rippleElement_.style.msTransform = transformString;\n          this.rippleElement_.style.transform = transformString;\n\n          if (start) {\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n          } else {\n            this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n          }\n        }\n      };\n\n      this.animFrameHandler = function() {\n        if (this.frameCount_-- > 0) {\n          window.requestAnimationFrame(this.animFrameHandler.bind(this));\n        } else {\n          this.setRippleStyles(false);\n        }\n      };\n    }\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialRipple,\n  classAsString: 'MaterialRipple',\n  cssClass: 'mdl-js-ripple-effect'\n});\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this pattern design here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @author Jason Mayes.\n */\n /* exported componentHandler */\nvar componentHandler = (function() {\n  'use strict';\n\n  var registeredComponents_ = [];\n  var createdComponents_ = [];\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   * @param {string} name The name of a class we want to use.\n   * @param {object} optReplace Optional object to replace match with.\n   * @return {object | false}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (optReplace !== undefined) {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   * @param {string} jsClass the programatic name of the element class we need\n   * to create a new instance of.\n   * @param {string} cssClass the name of the CSS class elements of this type\n   * will have.\n   */\n  function upgradeDomInternal(jsClass, cssClass) {\n    if (jsClass === undefined && cssClass === undefined) {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      if (cssClass === undefined) {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          cssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + cssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   * @param {HTMLElement} element The element we wish to upgrade.\n   * @param {string} jsClass The name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, jsClass) {\n    // Only upgrade elements that have not already been upgraded.\n    var dataUpgraded = element.getAttribute('data-upgraded');\n\n    if (dataUpgraded === null || dataUpgraded.indexOf(jsClass) === -1) {\n      // Upgrade element.\n      if (dataUpgraded === null) {\n        dataUpgraded = '';\n      }\n      element.setAttribute('data-upgraded', dataUpgraded + ',' + jsClass);\n      var registeredClass = findRegisteredClass_(jsClass);\n      if (registeredClass) {\n        // new\n        var instance = new registeredClass.classConstructor(element);\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        registeredClass.callbacks.forEach(function (callback) {\n          callback(element);\n        });\n\n        // Assign per element instance for control over API\n        element.widget = instance;\n      } else {\n        // If component creator forgot to register, try and see if\n        // it is in global scope.\n        createdComponents_.push(new window[jsClass](element));\n      }\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentupgraded', true, true);\n      element.dispatchEvent(ev);\n    }\n  }\n\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   * @param {object} config An object containing:\n   * {constructor: Constructor, classAsString: string, cssClass: string}\n   */\n  function registerInternal(config) {\n    var newConfig = {\n      'classConstructor': config.constructor,\n      'className': config.classAsString,\n      'cssClass': config.cssClass,\n      'callbacks': []\n    };\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   * @param {string} jsClass The class name of the WSK component we wish\n   * to hook into for any upgrades performed.\n   * @param {function} callback The function to call upon an upgrade. This\n   * function should expect 1 parameter - the HTMLElement which got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal\n  };\n})();\n\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all WSK\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') && 'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    componentHandler.upgradeElement = componentHandler.register = function () { };\n  }\n});\n","// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n\n// MIT license\n\n(function() {\n'use strict';\n\nif (!Date.now) {\n  Date.now = function() { return new Date().getTime(); };\n}\n\nvar vendors = ['webkit', 'moz'];\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n  var vp = vendors[i];\n  window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n  window.cancelAnimationFrame = (window[vp + 'CancelAnimationFrame'] ||\n  window[vp + 'CancelRequestAnimationFrame']);\n}\n\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n  var lastTime = 0;\n  window.requestAnimationFrame = function(callback) {\n      var now = Date.now();\n      var nextTime = Math.max(lastTime + 16, now);\n      return setTimeout(function() { callback(lastTime = nextTime); },\n                        nextTime - now);\n    };\n  window.cancelAnimationFrame = clearTimeout;\n}\n\n})();\n\n","/**\n * material-design-lite - Material Design Components in CSS, JS and HTML\n * @version v1.0.0\n * @link https://github.com/google/material-design-lite\n * @license Apache-2\n */\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this pattern design here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @author Jason Mayes.\n */\n /* exported componentHandler */\nvar componentHandler = (function() {\n  'use strict';\n\n  var registeredComponents_ = [];\n  var createdComponents_ = [];\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   * @param {string} name The name of a class we want to use.\n   * @param {object} optReplace Optional object to replace match with.\n   * @return {object | false}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (optReplace !== undefined) {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   * @param {string} jsClass the programatic name of the element class we need\n   * to create a new instance of.\n   * @param {string} cssClass the name of the CSS class elements of this type\n   * will have.\n   */\n  function upgradeDomInternal(jsClass, cssClass) {\n    if (jsClass === undefined && cssClass === undefined) {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      if (cssClass === undefined) {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          cssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + cssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   * @param {HTMLElement} element The element we wish to upgrade.\n   * @param {string} jsClass The name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, jsClass) {\n    // Only upgrade elements that have not already been upgraded.\n    var dataUpgraded = element.getAttribute('data-upgraded');\n\n    if (dataUpgraded === null || dataUpgraded.indexOf(jsClass) === -1) {\n      // Upgrade element.\n      if (dataUpgraded === null) {\n        dataUpgraded = '';\n      }\n      element.setAttribute('data-upgraded', dataUpgraded + ',' + jsClass);\n      var registeredClass = findRegisteredClass_(jsClass);\n      if (registeredClass) {\n        // new\n        var instance = new registeredClass.classConstructor(element);\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        registeredClass.callbacks.forEach(function (callback) {\n          callback(element);\n        });\n\n        // Assign per element instance for control over API\n        element.widget = instance;\n      } else {\n        // If component creator forgot to register, try and see if\n        // it is in global scope.\n        createdComponents_.push(new window[jsClass](element));\n      }\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentupgraded', true, true);\n      element.dispatchEvent(ev);\n    }\n  }\n\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   * @param {object} config An object containing:\n   * {constructor: Constructor, classAsString: string, cssClass: string}\n   */\n  function registerInternal(config) {\n    var newConfig = {\n      'classConstructor': config.constructor,\n      'className': config.classAsString,\n      'cssClass': config.cssClass,\n      'callbacks': []\n    };\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   * @param {string} jsClass The class name of the WSK component we wish\n   * to hook into for any upgrades performed.\n   * @param {function} callback The function to call upon an upgrade. This\n   * function should expect 1 parameter - the HTMLElement which got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal\n  };\n})();\n\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all WSK\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') && 'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    componentHandler.upgradeElement = componentHandler.register = function () { };\n  }\n});\n\n// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n\n// MIT license\n\n(function() {\n'use strict';\n\nif (!Date.now) {\n  Date.now = function() { return new Date().getTime(); };\n}\n\nvar vendors = ['webkit', 'moz'];\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n  var vp = vendors[i];\n  window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n  window.cancelAnimationFrame = (window[vp + 'CancelAnimationFrame'] ||\n  window[vp + 'CancelRequestAnimationFrame']);\n}\n\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n  var lastTime = 0;\n  window.requestAnimationFrame = function(callback) {\n      var now = Date.now();\n      var nextTime = Math.max(lastTime + 16, now);\n      return setTimeout(function() { callback(lastTime = nextTime); },\n                        nextTime - now);\n    };\n  window.cancelAnimationFrame = clearTimeout;\n}\n\n})();\n\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Animation WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction DemoAnimation(element) {\n  'use strict';\n\n  this.element_ = element;\n  this.position_ = this.Constant_.STARTING_POSITION;\n  this.movable_ = this.element_.querySelector('.' + this.CssClasses_.MOVABLE);\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nDemoAnimation.prototype.Constant_ = {\n  STARTING_POSITION: 1\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nDemoAnimation.prototype.CssClasses_ = {\n  MOVABLE: 'demo-animation__movable',\n  POSITION_PREFIX: 'demo-animation--position-'\n};\n\n/**\n * Handle click of element.\n * @param {Event} event The event that fired.\n * @private\n */\nDemoAnimation.prototype.handleClick_ = function(event) {\n  'use strict';\n\n  this.movable_.classList.remove(this.CssClasses_.POSITION_PREFIX +\n      this.position_);\n  this.position_++;\n  if (this.position_ > 6) {\n    this.position_ = 1;\n  }\n  this.movable_.classList.add(this.CssClasses_.POSITION_PREFIX +\n      this.position_);\n};\n\n/**\n * Initialize element.\n */\nDemoAnimation.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    if (!this.movable_) {\n      console.error('Was expecting to find an element with class name ' +\n          this.CssClasses_.MOVABLE + ' inside of: ', this.element_);\n      return;\n    }\n\n    this.element_.addEventListener('click', this.handleClick_.bind(this));\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: DemoAnimation,\n  classAsString: 'DemoAnimation',\n  cssClass: 'demo-js-animation'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Button WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialButton(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialButton.prototype.Constant_ = {\n  // None for now.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialButton.prototype.CssClasses_ = {\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n  RIPPLE: 'mdl-ripple'\n};\n\n/**\n * Handle blur of element.\n * @param {HTMLElement} element The instance of a button we want to blur.\n * @private\n */\nMaterialButton.prototype.blurHandler = function(event) {\n  'use strict';\n\n  if (event) {\n    this.element_.blur();\n  }\n};\n\n// Public methods.\n\n/**\n * Disable button.\n * @public\n */\nMaterialButton.prototype.disable = function() {\n  'use strict';\n\n  this.element_.disabled = true;\n};\n\n/**\n * Enable button.\n * @public\n */\nMaterialButton.prototype.enable = function() {\n  'use strict';\n\n  this.element_.disabled = false;\n};\n\n/**\n * Initialize element.\n */\nMaterialButton.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n      rippleContainer.appendChild(ripple);\n      ripple.addEventListener('mouseup', this.blurHandler.bind(this));\n      this.element_.appendChild(rippleContainer);\n    }\n    this.element_.addEventListener('mouseup', this.blurHandler.bind(this));\n    this.element_.addEventListener('mouseleave', this.blurHandler.bind(this));\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialButton,\n  classAsString: 'MaterialButton',\n  cssClass: 'mdl-js-button'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Checkbox WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialCheckbox(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialCheckbox.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialCheckbox.prototype.CssClasses_ = {\n  INPUT: 'mdl-checkbox__input',\n  BOX_OUTLINE: 'mdl-checkbox__box-outline',\n  FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n  TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked',\n  IS_UPGRADED: 'is-upgraded'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_();\n};\n\n/**\n * Handle focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialCheckbox.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialCheckbox.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.inputElement_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.inputElement_.checked) {\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialCheckbox.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.inputElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable checkbox.\n * @public\n */\nMaterialCheckbox.prototype.disable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable checkbox.\n * @public\n */\nMaterialCheckbox.prototype.enable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Check checkbox.\n * @public\n */\nMaterialCheckbox.prototype.check = function() {\n  'use strict';\n\n  this.inputElement_.checked = true;\n  this.updateClasses_();\n};\n\n/**\n * Uncheck checkbox.\n * @public\n */\nMaterialCheckbox.prototype.uncheck = function() {\n  'use strict';\n\n  this.inputElement_.checked = false;\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialCheckbox.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.inputElement_ = this.element_.querySelector('.' +\n        this.CssClasses_.INPUT);\n\n    var boxOutline = document.createElement('span');\n    boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n\n    var tickContainer = document.createElement('span');\n    tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n\n    var tickOutline = document.createElement('span');\n    tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n\n    boxOutline.appendChild(tickOutline);\n\n    this.element_.appendChild(tickContainer);\n    this.element_.appendChild(boxOutline);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.inputElement_.addEventListener('change', this.onChange_.bind(this));\n    this.inputElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.inputElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateClasses_();\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialCheckbox,\n  classAsString: 'MaterialCheckbox',\n  cssClass: 'mdl-js-checkbox'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Column Layout WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialColumnLayout(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialColumnLayout.prototype.Constant_ = {\n  INVISIBLE_WRAPPING_ELEMENT_COUNT: 3\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialColumnLayout.prototype.CssClasses_ = {\n  /**\n   * Class names should use camelCase and be prefixed with the word \"material\"\n   * to minimize conflict with 3rd party systems.\n   */\n\n  // TODO: Upgrade classnames in HTML / CSS / JS to use material prefix to\n  // reduce conflict and convert to camelCase for consistency.\n  INVISIBLE_WRAPPING_ELEMENT: 'mdl-column-layout__wrap-hack'\n};\n\n\n/**\n * Initialize element.\n */\nMaterialColumnLayout.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    // Add some hidden elements to make sure everything aligns correctly. See\n    // CSS file for details.\n    for (var j = 0; j < this.Constant_.INVISIBLE_WRAPPING_ELEMENT_COUNT ; j++) {\n      var hiddenHackDiv = document.createElement('div');\n      hiddenHackDiv.classList.add(this.CssClasses_.INVISIBLE_WRAPPING_ELEMENT);\n      this.element_.appendChild(hiddenHackDiv);\n    }\n  }\n};\n\n\n//The component registers itself. It can assume componentHandler is available\n//in the global scope.\ncomponentHandler.register({\n  constructor: MaterialColumnLayout,\n  classAsString: 'MaterialColumnLayout',\n  cssClass: 'mdl-column-layout'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for icon toggle WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialIconToggle(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialIconToggle.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialIconToggle.prototype.CssClasses_ = {\n  INPUT: 'mdl-icon-toggle__input',\n  JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_();\n};\n\n/**\n * Handle focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialIconToggle.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialIconToggle.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.inputElement_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.inputElement_.checked) {\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialIconToggle.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.inputElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.disable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.enable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Check icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.check = function() {\n  'use strict';\n\n  this.inputElement_.checked = true;\n  this.updateClasses_();\n};\n\n/**\n * Uncheck icon toggle.\n * @public\n */\nMaterialIconToggle.prototype.uncheck = function() {\n  'use strict';\n\n  this.inputElement_.checked = false;\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialIconToggle.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.inputElement_ =\n        this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.inputElement_.addEventListener('change', this.onChange_.bind(this));\n    this.inputElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.inputElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateClasses_();\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialIconToggle,\n  classAsString: 'MaterialIconToggle',\n  cssClass: 'mdl-js-icon-toggle'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for dropdown WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialMenu(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialMenu.prototype.Constant_ = {\n  // Total duration of the menu animation.\n  TRANSITION_DURATION_SECONDS: 0.3,\n  // The fraction of the total duration we want to use for menu item animations.\n  TRANSITION_DURATION_FRACTION: 0.8,\n  // How long the menu stays open after choosing an option (so the user can see\n  // the ripple).\n  CLOSE_TIMEOUT: 150\n};\n\n/**\n * Keycodes, for code readability.\n * @enum {number}\n * @private\n */\nMaterialMenu.prototype.Keycodes_ = {\n  ENTER: 13,\n  ESCAPE: 27,\n  SPACE: 32,\n  UP_ARROW: 38,\n  DOWN_ARROW: 40\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialMenu.prototype.CssClasses_ = {\n  CONTAINER: 'mdl-menu__container',\n  OUTLINE: 'mdl-menu__outline',\n  ITEM: 'mdl-menu__item',\n  ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE: 'mdl-ripple',\n  // Statuses\n  IS_UPGRADED: 'is-upgraded',\n  IS_VISIBLE: 'is-visible',\n  IS_ANIMATING: 'is-animating',\n  // Alignment options\n  BOTTOM_LEFT: 'mdl-menu--bottom-left',  // This is the default.\n  BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n  TOP_LEFT: 'mdl-menu--top-left',\n  TOP_RIGHT: 'mdl-menu--top-right',\n  UNALIGNED: 'mdl-menu--unaligned'\n};\n\n/**\n * Initialize element.\n */\nMaterialMenu.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    // Create container for the menu.\n    var container = document.createElement('div');\n    container.classList.add(this.CssClasses_.CONTAINER);\n    this.element_.parentElement.insertBefore(container, this.element_);\n    this.element_.parentElement.removeChild(this.element_);\n    container.appendChild(this.element_);\n    this.container_ = container;\n\n    // Create outline for the menu (shadow and background).\n    var outline = document.createElement('div');\n    outline.classList.add(this.CssClasses_.OUTLINE);\n    this.outline_ = outline;\n    container.insertBefore(outline, this.element_);\n\n    // Find the \"for\" element and bind events to it.\n    var forElId = this.element_.getAttribute('for');\n    var forEl = null;\n    if (forElId) {\n      forEl = document.getElementById(forElId);\n      if (forEl) {\n        this.forElement_ = forEl;\n        forEl.addEventListener('click', this.handleForClick_.bind(this));\n        forEl.addEventListener('keydown',\n            this.handleForKeyboardEvent_.bind(this));\n      }\n    }\n\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\n    for (var i = 0; i < items.length; i++) {\n      // Add a listener to each menu item.\n      items[i].addEventListener('click', this.handleItemClick_.bind(this));\n      // Add a tab index to each menu item.\n      items[i].tabIndex = '-1';\n      // Add a keyboard listener to each menu item.\n      items[i].addEventListener('keydown',\n          this.handleItemKeyboardEvent_.bind(this));\n    }\n\n    // Add ripple classes to each item, if the user has enabled ripples.\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\n      for (i = 0; i < items.length; i++) {\n        var item = items[i];\n\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(ripple);\n\n        item.appendChild(rippleContainer);\n        item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      }\n    }\n\n    // Copy alignment classes to the container, so the outline can use them.\n    if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n      this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n      this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n      this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n      this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n    }\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n      this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n    }\n\n    container.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n/**\n * Handles a click on the \"for\" element, by positioning the menu and then\n * toggling it.\n * @private\n */\nMaterialMenu.prototype.handleForClick_ = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.forElement_) {\n    var rect = this.forElement_.getBoundingClientRect();\n    var forRect = this.forElement_.parentElement.getBoundingClientRect();\n\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n      // Do not position the menu automatically. Requires the developer to\n      // manually specify position.\n    } else if (this.element_.classList.contains(\n        this.CssClasses_.BOTTOM_RIGHT)) {\n      // Position below the \"for\" element, aligned to its right.\n      this.container_.style.right = (forRect.right - rect.right) + 'px';\n      this.container_.style.top =\n          this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n      // Position above the \"for\" element, aligned to its left.\n      this.container_.style.left = this.forElement_.offsetLeft + 'px';\n      this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n      // Position above the \"for\" element, aligned to its right.\n      this.container_.style.right = (forRect.right - rect.right) + 'px';\n      this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n    } else {\n      // Default: position below the \"for\" element, aligned to its left.\n      this.container_.style.left = this.forElement_.offsetLeft + 'px';\n      this.container_.style.top =\n          this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n    }\n  }\n\n  this.toggle(evt);\n};\n\n/**\n * Handles a keyboard event on the \"for\" element.\n * @private\n */\nMaterialMenu.prototype.handleForKeyboardEvent_ = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.container_ && this.forElement_) {\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n      ':not([disabled])');\n\n    if (items && items.length > 0 &&\n        this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n      if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n        evt.preventDefault();\n        items[items.length - 1].focus();\n      } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n        evt.preventDefault();\n        items[0].focus();\n      }\n    }\n  }\n};\n\n/**\n * Handles a keyboard event on an item.\n * @private\n */\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.container_) {\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n      ':not([disabled])');\n\n    if (items && items.length > 0 &&\n        this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n      var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n\n      if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n        evt.preventDefault();\n        if (currentIndex > 0) {\n          items[currentIndex - 1].focus();\n        } else {\n          items[items.length - 1].focus();\n        }\n      } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n        evt.preventDefault();\n        if (items.length > currentIndex + 1) {\n          items[currentIndex + 1].focus();\n        } else {\n          items[0].focus();\n        }\n      } else if (evt.keyCode === this.Keycodes_.SPACE ||\n            evt.keyCode === this.Keycodes_.ENTER) {\n        evt.preventDefault();\n        // Send mousedown and mouseup to trigger ripple.\n        var e = new MouseEvent('mousedown');\n        evt.target.dispatchEvent(e);\n        e = new MouseEvent('mouseup');\n        evt.target.dispatchEvent(e);\n        // Send click.\n        evt.target.click();\n      } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n        evt.preventDefault();\n        this.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles a click event on an item.\n * @private\n */\nMaterialMenu.prototype.handleItemClick_ = function(evt) {\n  'use strict';\n\n  if (evt.target.getAttribute('disabled') !== null) {\n    evt.stopPropagation();\n  } else {\n    // Wait some time before closing menu, so the user can see the ripple.\n    this.closing_ = true;\n    window.setTimeout(function(evt) {\n      this.hide();\n      this.closing_ = false;\n    }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n  }\n};\n\n/**\n * Calculates the initial clip (for opening the menu) or final clip (for closing\n * it), and applies it. This allows us to animate from or to the correct point,\n * that is, the point it's aligned to in the \"for\" element.\n * @private\n */\nMaterialMenu.prototype.applyClip_ = function(height, width) {\n  'use strict';\n\n  if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n    // Do not clip.\n    this.element_.style.clip = null;\n  } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n    // Clip to the top right corner of the menu.\n    this.element_.style.clip =\n        'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n  } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n    // Clip to the bottom left corner of the menu.\n    this.element_.style.clip =\n        'rect(' + height + 'px 0 ' + height + 'px 0)';\n  } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n    // Clip to the bottom right corner of the menu.\n    this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' +\n        height + 'px ' + width + 'px)';\n  } else {\n    // Default: do not clip (same as clipping to the top left corner).\n    this.element_.style.clip = null;\n  }\n};\n\n/**\n * Adds an event listener to clean up after the animation ends.\n * @private\n */\nMaterialMenu.prototype.addAnimationEndListener_ = function() {\n  'use strict';\n\n  var cleanup = function() {\n    this.element_.classList.remove(this.CssClasses_.IS_ANIMATING);\n  }.bind(this);\n\n  // Remove animation class once the transition is done.\n  this.element_.addEventListener('transitionend', cleanup);\n  this.element_.addEventListener('webkitTransitionEnd', cleanup);\n};\n\n/**\n * Displays the menu.\n * @public\n */\nMaterialMenu.prototype.show = function(evt) {\n  'use strict';\n\n  if (this.element_ && this.container_ && this.outline_) {\n    // Measure the inner element.\n    var height = this.element_.getBoundingClientRect().height;\n    var width = this.element_.getBoundingClientRect().width;\n\n    // Apply the inner element's size to the container and outline.\n    this.container_.style.width = width + 'px';\n    this.container_.style.height = height + 'px';\n    this.outline_.style.width = width + 'px';\n    this.outline_.style.height = height + 'px';\n\n    var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS *\n        this.Constant_.TRANSITION_DURATION_FRACTION;\n\n    // Calculate transition delays for individual menu items, so that they fade\n    // in one at a time.\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n    for (var i = 0; i < items.length; i++) {\n      var itemDelay = null;\n      if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) ||\n          this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        itemDelay = ((height - items[i].offsetTop - items[i].offsetHeight) /\n            height * transitionDuration) + 's';\n      } else {\n        itemDelay = (items[i].offsetTop / height * transitionDuration) + 's';\n      }\n      items[i].style.transitionDelay = itemDelay;\n    }\n\n    // Apply the initial clip to the text before we start animating.\n    this.applyClip_(height, width);\n\n    // Wait for the next frame, turn on animation, and apply the final clip.\n    // Also make it visible. This triggers the transitions.\n    window.requestAnimationFrame(function() {\n      this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n      this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n      this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n    }.bind(this));\n\n    // Clean up after the animation is complete.\n    this.addAnimationEndListener_();\n\n    // Add a click listener to the document, to close the menu.\n    var callback = function(e) {\n      // Check to see if the document is processing the same event that\n      // displayed the menu in the first place. If so, do nothing.\n      // Also check to see if the menu is in the process of closing itself, and\n      // do nothing in that case.\n      if (e !== evt && !this.closing_) {\n        document.removeEventListener('click', callback);\n        this.hide();\n      }\n    }.bind(this);\n    document.addEventListener('click', callback);\n  }\n};\n\n/**\n * Hides the menu.\n * @public\n */\nMaterialMenu.prototype.hide = function() {\n  'use strict';\n\n  if (this.element_ && this.container_ && this.outline_) {\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\n    // Remove all transition delays; menu items fade out concurrently.\n    for (var i = 0; i < items.length; i++) {\n      items[i].style.transitionDelay = null;\n    }\n\n    // Measure the inner element.\n    var height = this.element_.getBoundingClientRect().height;\n    var width = this.element_.getBoundingClientRect().width;\n\n    // Turn on animation, and apply the final clip. Also make invisible.\n    // This triggers the transitions.\n    this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n    this.applyClip_(height, width);\n    this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n\n    // Clean up after the animation is complete.\n    this.addAnimationEndListener_();\n  }\n};\n\n/**\n * Displays or hides the menu, depending on current state.\n * @public\n */\nMaterialMenu.prototype.toggle = function(evt) {\n  'use strict';\n\n  if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n    this.hide();\n  } else {\n    this.show(evt);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialMenu,\n  classAsString: 'MaterialMenu',\n  cssClass: 'mdl-js-menu'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Progress WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialProgress(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialProgress.prototype.Constant_ = {\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialProgress.prototype.CssClasses_ = {\n  INDETERMINATE_CLASS: 'mdl-progress__indeterminate'\n};\n\nMaterialProgress.prototype.setProgress = function(p) {\n  'use strict';\n\n  if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n    return;\n  }\n\n  this.progressbar_.style.width = p + '%';\n};\n\nMaterialProgress.prototype.setBuffer = function(p) {\n  'use strict';\n\n  this.bufferbar_.style.width = p + '%';\n  this.auxbar_.style.width = (100-p) + '%';\n};\n\n/**\n * Initialize element.\n */\nMaterialProgress.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var el = document.createElement('div');\n    el.className = 'progressbar bar bar1';\n    this.element_.appendChild(el);\n    this.progressbar_ = el;\n\n    el = document.createElement('div');\n    el.className = 'bufferbar bar bar2';\n    this.element_.appendChild(el);\n    this.bufferbar_ = el;\n\n    el = document.createElement('div');\n    el.className = 'auxbar bar bar3';\n    this.element_.appendChild(el);\n    this.auxbar_ = el;\n\n    this.progressbar_.style.width = '0%';\n    this.bufferbar_.style.width = '100%';\n    this.auxbar_.style.width = '0%';\n\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialProgress,\n  classAsString: 'MaterialProgress',\n  cssClass: 'mdl-js-progress'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Radio WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialRadio(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialRadio.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialRadio.prototype.CssClasses_ = {\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked',\n  IS_UPGRADED: 'is-upgraded',\n  JS_RADIO: 'mdl-js-radio',\n  RADIO_BTN: 'mdl-radio__button',\n  RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n  RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_(this.btnElement_, this.element_);\n\n  // Since other radio buttons don't get change events, we need to look for\n  // them to update their classes.\n  var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n  for (var i = 0; i < radios.length; i++) {\n    var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n    // Different name == different group, so no point updating those.\n    if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n      this.updateClasses_(button, radios[i]);\n    }\n  }\n};\n\n/**\n * Handle focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRadio.prototype.onMouseup_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Update classes.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialRadio.prototype.updateClasses_ = function(button, label) {\n  'use strict';\n\n  if (button.disabled) {\n    label.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    label.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (button.checked) {\n    label.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    label.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialRadio.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.btnElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable radio.\n * @public\n */\nMaterialRadio.prototype.disable = function() {\n  'use strict';\n\n  this.btnElement_.disabled = true;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Enable radio.\n * @public\n */\nMaterialRadio.prototype.enable = function() {\n  'use strict';\n\n  this.btnElement_.disabled = false;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Check radio.\n * @public\n */\nMaterialRadio.prototype.check = function() {\n  'use strict';\n\n  this.btnElement_.checked = true;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Uncheck radio.\n * @public\n */\nMaterialRadio.prototype.uncheck = function() {\n  'use strict';\n\n  this.btnElement_.checked = false;\n  this.updateClasses_(this.btnElement_, this.element_);\n};\n\n/**\n * Initialize element.\n */\nMaterialRadio.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.btnElement_ = this.element_.querySelector('.' +\n        this.CssClasses_.RADIO_BTN);\n\n    var outerCircle = document.createElement('span');\n    outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n\n    var innerCircle = document.createElement('span');\n    innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n\n    this.element_.appendChild(outerCircle);\n    this.element_.appendChild(innerCircle);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(\n        this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(\n          this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(\n          this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseup_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.btnElement_.addEventListener('change', this.onChange_.bind(this));\n    this.btnElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.btnElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseup_.bind(this));\n\n    this.updateClasses_(this.btnElement_, this.element_);\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialRadio,\n  classAsString: 'MaterialRadio',\n  cssClass: 'mdl-js-radio'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Slider WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialSlider(element) {\n  'use strict';\n\n  this.element_ = element;\n  // Browser feature detection.\n  this.isIE_ = window.navigator.msPointerEnabled;\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialSlider.prototype.Constant_ = {\n  // None for now.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialSlider.prototype.CssClasses_ = {\n  IE_CONTAINER: 'mdl-slider__ie-container',\n  SLIDER_CONTAINER: 'mdl-slider__container',\n  BACKGROUND_FLEX: 'mdl-slider__background-flex',\n  BACKGROUND_LOWER: 'mdl-slider__background-lower',\n  BACKGROUND_UPPER: 'mdl-slider__background-upper',\n  IS_LOWEST_VALUE: 'is-lowest-value',\n  IS_UPGRADED: 'is-upgraded'\n};\n\n/**\n * Handle input on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.onInput_ = function(event) {\n  'use strict';\n\n  this.updateValueStyles_();\n};\n\n/**\n * Handle change on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateValueStyles_();\n};\n\n/**\n * Handle mouseup on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  event.target.blur();\n};\n\n/**\n * Handle updating of values.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSlider.prototype.updateValueStyles_ = function(event) {\n  'use strict';\n\n  // Calculate and apply percentages to div structure behind slider.\n  var fraction = (this.element_.value - this.element_.min) /\n      (this.element_.max - this.element_.min);\n\n  if (fraction === 0) {\n    this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n  }\n\n  if (!this.isIE_) {\n    this.backgroundLower_.style.flex = fraction;\n    this.backgroundLower_.style.webkitFlex = fraction;\n    this.backgroundUpper_.style.flex = 1 - fraction;\n    this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n  }\n};\n\n// Public methods.\n\n/**\n * Disable slider.\n * @public\n */\nMaterialSlider.prototype.disable = function() {\n  'use strict';\n\n  this.element_.disabled = true;\n};\n\n/**\n * Enable slider.\n * @public\n */\nMaterialSlider.prototype.enable = function() {\n  'use strict';\n\n  this.element_.disabled = false;\n};\n\n/**\n * Update slider value.\n * @param {Number} value The value to which to set the control (optional).\n * @public\n */\nMaterialSlider.prototype.change = function(value) {\n  'use strict';\n\n  if (value) {\n    this.element_.value = value;\n  }\n  this.updateValueStyles_();\n};\n\n/**\n * Initialize element.\n */\nMaterialSlider.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    if (this.isIE_) {\n      // Since we need to specify a very large height in IE due to\n      // implementation limitations, we add a parent here that trims it down to\n      // a reasonable size.\n      var containerIE = document.createElement('div');\n      containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n      this.element_.parentElement.insertBefore(containerIE, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      containerIE.appendChild(this.element_);\n    } else {\n      // For non-IE browsers, we need a div structure that sits behind the\n      // slider and allows us to style the left and right sides of it with\n      // different colors.\n      var container = document.createElement('div');\n      container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n      this.element_.parentElement.insertBefore(container, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      container.appendChild(this.element_);\n      var backgroundFlex = document.createElement('div');\n      backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n      container.appendChild(backgroundFlex);\n      this.backgroundLower_ = document.createElement('div');\n      this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n      backgroundFlex.appendChild(this.backgroundLower_);\n      this.backgroundUpper_ = document.createElement('div');\n      this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n      backgroundFlex.appendChild(this.backgroundUpper_);\n    }\n\n    this.element_.addEventListener('input', this.onInput_.bind(this));\n    this.element_.addEventListener('change', this.onChange_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateValueStyles_();\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialSlider,\n  classAsString: 'MaterialSlider',\n  cssClass: 'mdl-js-slider'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Spinner WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialSpinner(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialSpinner.prototype.Constant_ = {\n  WSK_SPINNER_LAYER_COUNT: 4\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialSpinner.prototype.CssClasses_ = {\n  WSK_SPINNER_LAYER: 'mdl-spinner__layer',\n  WSK_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n  WSK_SPINNER_CIRCLE: 'mdl-spinner__circle',\n  WSK_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n  WSK_SPINNER_LEFT: 'mdl-spinner__left',\n  WSK_SPINNER_RIGHT: 'mdl-spinner__right'\n};\n\n/**\n* Auxiliary method to create a spinner layer.\n*/\nMaterialSpinner.prototype.createLayer = function(index) {\n  'use strict';\n\n  var layer = document.createElement('div');\n  layer.classList.add(this.CssClasses_.WSK_SPINNER_LAYER);\n  layer.classList.add(this.CssClasses_.WSK_SPINNER_LAYER + '-' + index);\n\n  var leftClipper = document.createElement('div');\n  leftClipper.classList.add(this.CssClasses_.WSK_SPINNER_CIRCLE_CLIPPER);\n  leftClipper.classList.add(this.CssClasses_.WSK_SPINNER_LEFT);\n\n  var gapPatch = document.createElement('div');\n  gapPatch.classList.add(this.CssClasses_.WSK_SPINNER_GAP_PATCH);\n\n  var rightClipper = document.createElement('div');\n  rightClipper.classList.add(this.CssClasses_.WSK_SPINNER_CIRCLE_CLIPPER);\n  rightClipper.classList.add(this.CssClasses_.WSK_SPINNER_RIGHT);\n\n  var circleOwners = [leftClipper, gapPatch, rightClipper];\n\n  for (var i = 0; i < circleOwners.length; i++) {\n    var circle = document.createElement('div');\n    circle.classList.add(this.CssClasses_.WSK_SPINNER_CIRCLE);\n    circleOwners[i].appendChild(circle);\n  }\n\n  layer.appendChild(leftClipper);\n  layer.appendChild(gapPatch);\n  layer.appendChild(rightClipper);\n\n  this.element_.appendChild(layer);\n};\n\n/**\n* Stops the spinner animation.\n* Public method for users who need to stop the spinner for any reason.\n* @public\n*/\nMaterialSpinner.prototype.stop = function() {\n  'use strict';\n\n  this.element_.classList.remove('is-active');\n};\n\n/**\n* Starts the spinner animation.\n* Public method for users who need to manually start the spinner for any reason\n* (instead of just adding the 'is-active' class to their markup).\n* @public\n*/\nMaterialSpinner.prototype.start = function() {\n  'use strict';\n\n  this.element_.classList.add('is-active');\n};\n\n/**\n * Initialize element.\n */\nMaterialSpinner.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    for (var i = 1; i <= this.Constant_.WSK_SPINNER_LAYER_COUNT; i++) {\n      this.createLayer(i);\n    }\n\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialSpinner,\n  classAsString: 'MaterialSpinner',\n  cssClass: 'mdl-js-spinner'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Checkbox WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialSwitch(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialSwitch.prototype.Constant_ = {\n  TINY_TIMEOUT: 0.001\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialSwitch.prototype.CssClasses_ = {\n  INPUT: 'mdl-switch__input',\n  TRACK: 'mdl-switch__track',\n  THUMB: 'mdl-switch__thumb',\n  FOCUS_HELPER: 'mdl-switch__focus-helper',\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE: 'mdl-ripple',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_CHECKED: 'is-checked'\n};\n\n/**\n * Handle change of state.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onChange_ = function(event) {\n  'use strict';\n\n  this.updateClasses_();\n};\n\n/**\n * Handle focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus of element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle mouseup.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialSwitch.prototype.onMouseUp_ = function(event) {\n  'use strict';\n\n  this.blur_();\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialSwitch.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.inputElement_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.inputElement_.checked) {\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n  }\n};\n\n/**\n * Add blur.\n * @private\n */\nMaterialSwitch.prototype.blur_ = function(event) {\n  'use strict';\n\n  // TODO: figure out why there's a focus event being fired after our blur,\n  // so that we can avoid this hack.\n  window.setTimeout(function() {\n    this.inputElement_.blur();\n  }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n\n// Public methods.\n\n/**\n * Disable switch.\n * @public\n */\nMaterialSwitch.prototype.disable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable switch.\n * @public\n */\nMaterialSwitch.prototype.enable = function() {\n  'use strict';\n\n  this.inputElement_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Activate switch.\n * @public\n */\nMaterialSwitch.prototype.on = function() {\n  'use strict';\n\n  this.inputElement_.checked = true;\n  this.updateClasses_();\n};\n\n/**\n * Deactivate switch.\n * @public\n */\nMaterialSwitch.prototype.off = function() {\n  'use strict';\n\n  this.inputElement_.checked = false;\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialSwitch.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.inputElement_ = this.element_.querySelector('.' +\n        this.CssClasses_.INPUT);\n\n    var track = document.createElement('div');\n    track.classList.add(this.CssClasses_.TRACK);\n\n    var thumb = document.createElement('div');\n    thumb.classList.add(this.CssClasses_.THUMB);\n\n    var focusHelper = document.createElement('span');\n    focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n\n    thumb.appendChild(focusHelper);\n\n    this.element_.appendChild(track);\n    this.element_.appendChild(thumb);\n\n    var rippleContainer;\n    if (this.element_.classList.contains(\n        this.CssClasses_.RIPPLE_EFFECT)) {\n      this.element_.classList.add(\n          this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(\n          this.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n      rippleContainer.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n      var ripple = document.createElement('span');\n      ripple.classList.add(this.CssClasses_.RIPPLE);\n\n      rippleContainer.appendChild(ripple);\n      this.element_.appendChild(rippleContainer);\n    }\n\n    this.inputElement_.addEventListener('change', this.onChange_.bind(this));\n    this.inputElement_.addEventListener('focus', this.onFocus_.bind(this));\n    this.inputElement_.addEventListener('blur', this.onBlur_.bind(this));\n    this.element_.addEventListener('mouseup', this.onMouseUp_.bind(this));\n\n    this.updateClasses_();\n    this.element_.classList.add('is-upgraded');\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialSwitch,\n  classAsString: 'MaterialSwitch',\n  cssClass: 'mdl-js-switch'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Tabs WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialTabs(element) {\n  'use strict';\n\n  // Stores the HTML element.\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string}\n * @private\n */\nMaterialTabs.prototype.Constant_ = {\n  // None at the moment.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialTabs.prototype.CssClasses_ = {\n  TAB_CLASS: 'mdl-tabs__tab',\n  PANEL_CLASS: 'mdl-tabs__panel',\n  ACTIVE_CLASS: 'is-active',\n  UPGRADED_CLASS: 'is-upgraded',\n\n  WSK_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  WSK_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n  WSK_RIPPLE: 'mdl-ripple',\n  WSK_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n};\n\n/**\n * Handle clicks to a tabs component\n * @private\n */\nMaterialTabs.prototype.initTabs_ = function(e) {\n  'use strict';\n\n  if (this.element_.classList.contains(this.CssClasses_.WSK_JS_RIPPLE_EFFECT)) {\n    this.element_.classList.add(\n      this.CssClasses_.WSK_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n  }\n\n  // Select element tabs, document panels\n  this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n  this.panels_ =\n      this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n\n  // Create new tabs for each tab element\n  for (var i = 0; i < this.tabs_.length; i++) {\n    new MaterialTab(this.tabs_[i], this);\n  }\n\n  this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n};\n\n/**\n * Reset tab state, dropping active classes\n * @private\n */\nMaterialTabs.prototype.resetTabState_ = function() {\n  'use strict';\n\n  for (var k = 0; k < this.tabs_.length; k++) {\n    this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\n/**\n * Reset panel state, droping active classes\n * @private\n */\nMaterialTabs.prototype.resetPanelState_ = function() {\n  'use strict';\n\n  for (var j = 0; j < this.panels_.length; j++) {\n    this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\nMaterialTabs.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.initTabs_();\n  }\n};\n\nfunction MaterialTab(tab, ctx) {\n  'use strict';\n\n  if (tab) {\n    if (ctx.element_.classList.contains(ctx.CssClasses_.WSK_JS_RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(ctx.CssClasses_.WSK_RIPPLE_CONTAINER);\n      rippleContainer.classList.add(ctx.CssClasses_.WSK_JS_RIPPLE_EFFECT);\n      var ripple = document.createElement('span');\n      ripple.classList.add(ctx.CssClasses_.WSK_RIPPLE);\n      rippleContainer.appendChild(ripple);\n      tab.appendChild(rippleContainer);\n    }\n\n    tab.addEventListener('click', function(e) {\n      e.preventDefault();\n      var href = tab.href.split('#')[1];\n      var panel = ctx.element_.querySelector('#' + href);\n      ctx.resetTabState_();\n      ctx.resetPanelState_();\n      tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n      panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n    });\n\n  }\n}\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialTabs,\n  classAsString: 'MaterialTabs',\n  cssClass: 'mdl-js-tabs'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Textfield WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialTextfield(element) {\n  'use strict';\n\n  this.element_ = element;\n  this.maxRows = this.Constant_.NO_MAX_ROWS;\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialTextfield.prototype.Constant_ = {\n  NO_MAX_ROWS: -1,\n  MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialTextfield.prototype.CssClasses_ = {\n  LABEL: 'mdl-textfield__label',\n  INPUT: 'mdl-textfield__input',\n  IS_DIRTY: 'is-dirty',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_INVALID: 'is-invalid',\n  IS_UPGRADED: 'is-upgraded'\n};\n\n/**\n * Handle input being entered.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onKeyDown_ = function(event) {\n  'use strict';\n\n  var currentRowCount = event.target.value.split('\\n').length;\n  if (event.keyCode === 13) {\n    if (currentRowCount >= this.maxRows) {\n      event.preventDefault();\n    }\n  }\n};\n\n/**\n * Handle focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onFocus_ = function(event) {\n  'use strict';\n\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onBlur_ = function(event) {\n  'use strict';\n\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle class updates.\n * @param {HTMLElement} button The button whose classes we should update.\n * @param {HTMLElement} label The label whose classes we should update.\n * @private\n */\nMaterialTextfield.prototype.updateClasses_ = function() {\n  'use strict';\n\n  if (this.input_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n\n  if (this.input_.validity.valid) {\n    this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n  } else {\n    this.element_.classList.add(this.CssClasses_.IS_INVALID);\n  }\n\n  if (this.input_.value && this.input_.value.length > 0) {\n    this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n  }\n};\n\n// Public methods.\n\n/**\n * Disable text field.\n * @public\n */\nMaterialTextfield.prototype.disable = function() {\n  'use strict';\n\n  this.input_.disabled = true;\n  this.updateClasses_();\n};\n\n/**\n * Enable text field.\n * @public\n */\nMaterialTextfield.prototype.enable = function() {\n  'use strict';\n\n  this.input_.disabled = false;\n  this.updateClasses_();\n};\n\n/**\n * Update text field value.\n * @param {String} value The value to which to set the control (optional).\n * @public\n */\nMaterialTextfield.prototype.change = function(value) {\n  'use strict';\n\n  if (value) {\n    this.input_.value = value;\n  }\n  this.updateClasses_();\n};\n\n/**\n * Initialize element.\n */\nMaterialTextfield.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n    this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n    if (this.input_) {\n      if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n        this.maxRows = parseInt(this.input_.getAttribute(\n            this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n        if (isNaN(this.maxRows)) {\n          this.maxRows = this.Constant_.NO_MAX_ROWS;\n        }\n      }\n\n      this.input_.addEventListener('input', this.updateClasses_.bind(this));\n      this.input_.addEventListener('focus', this.onFocus_.bind(this));\n      this.input_.addEventListener('blur', this.onBlur_.bind(this));\n\n      if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n        // TODO: This should handle pasting multi line text.\n        // Currently doesn't.\n        this.input_.addEventListener('keydown', this.onKeyDown_.bind(this));\n      }\n\n      this.updateClasses_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialTextfield,\n  classAsString: 'MaterialTextfield',\n  cssClass: 'mdl-js-textfield'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Tooltip WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialTooltip(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialTooltip.prototype.Constant_ = {\n  // None for now.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialTooltip.prototype.CssClasses_ = {\n  IS_ACTIVE: 'is-active'\n};\n\n\n/**\n * Handle mouseenter for tooltip.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTooltip.prototype.handleMouseEnter_ = function(event) {\n  'use strict';\n\n  event.stopPropagation();\n  var props = event.target.getBoundingClientRect();\n  this.element_.style.left = props.left + (props.width / 2) + 'px';\n  this.element_.style.marginLeft = -1 * (this.element_.offsetWidth / 2) + 'px';\n  this.element_.style.top = props.top + props.height + 10 + 'px';\n  this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n};\n\n\n/**\n * Handle mouseleave for tooltip.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTooltip.prototype.handleMouseLeave_ = function(event) {\n  'use strict';\n\n  event.stopPropagation();\n  this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n};\n\n\n/**\n * Initialize element.\n */\nMaterialTooltip.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var forElId = this.element_.getAttribute('for');\n    var forEl = null;\n\n    if (forElId) {\n      forEl = document.getElementById(forElId);\n    }\n\n    if (forEl) {\n      forEl.addEventListener('mouseenter', this.handleMouseEnter_.bind(this),\n          false);\n      forEl.addEventListener('mouseleave', this.handleMouseLeave_.bind(this));\n    }\n  }\n};\n\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialTooltip,\n  classAsString: 'MaterialTooltip',\n  cssClass: 'mdl-tooltip'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Layout WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialLayout(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialLayout.prototype.Constant_ = {\n  MAX_WIDTH: '(max-width: 850px)'\n};\n\n/**\n * Modes.\n * @enum {number}\n * @private\n */\nMaterialLayout.prototype.Mode_ = {\n  STANDARD: 0,\n  SEAMED: 1,\n  WATERFALL: 2,\n  SCROLL: 3\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialLayout.prototype.CssClasses_ = {\n  HEADER: 'mdl-layout__header',\n  DRAWER: 'mdl-layout__drawer',\n  CONTENT: 'mdl-layout__content',\n  DRAWER_BTN: 'mdl-layout__drawer-button',\n\n  JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n  RIPPLE: 'mdl-ripple',\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n\n  HEADER_SEAMED: 'mdl-layout__header--seamed',\n  HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n  HEADER_SCROLL: 'mdl-layout__header--scroll',\n\n  FIXED_HEADER: 'mdl-layout--fixed-header',\n  OBFUSCATOR: 'mdl-layout__obfuscator',\n\n  TAB_BAR: 'mdl-layout__tab-bar',\n  TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n  TAB: 'mdl-layout__tab',\n  TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n  TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n  TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n  PANEL: 'mdl-layout__tab-panel',\n\n  HAS_DRAWER_CLASS: 'has-drawer',\n  SHADOW_CLASS: 'is-casting-shadow',\n  COMPACT_CLASS: 'is-compact',\n  SMALL_SCREEN_CLASS: 'is-small-screen',\n  DRAWER_OPEN_CLASS: 'is-visible',\n  ACTIVE_CLASS: 'is-active',\n  UPGRADED_CLASS: 'is-upgraded',\n  ANIMATING_CLASS: 'is-animating'\n};\n\n/**\n * Handles scrolling on the content.\n * @private\n */\nMaterialLayout.prototype.contentScrollHandler_ = function() {\n  'use strict';\n\n  if(this.header_.classList.contains(this.CssClasses_.ANIMATING_CLASS)) {\n    return;\n  }\n\n  if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.COMPACT_CLASS)) {\n    this.header_.classList.add(this.CssClasses_.SHADOW_CLASS);\n    this.header_.classList.add(this.CssClasses_.COMPACT_CLASS);\n    this.header_.classList.add(this.CssClasses_.ANIMATING_CLASS);\n  } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.COMPACT_CLASS)) {\n    this.header_.classList.remove(this.CssClasses_.SHADOW_CLASS);\n    this.header_.classList.remove(this.CssClasses_.COMPACT_CLASS);\n    this.header_.classList.add(this.CssClasses_.ANIMATING_CLASS);\n  }\n};\n\n/**\n * Handles changes in screen size.\n * @private\n */\nMaterialLayout.prototype.screenSizeHandler_ = function() {\n  'use strict';\n\n  if (this.screenSizeMediaQuery_.matches) {\n    this.element_.classList.add(this.CssClasses_.SMALL_SCREEN_CLASS);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.SMALL_SCREEN_CLASS);\n    // Collapse drawer (if any) when moving to a large screen size.\n    if (this.drawer_) {\n      this.drawer_.classList.remove(this.CssClasses_.DRAWER_OPEN_CLASS);\n    }\n  }\n};\n\n/**\n * Handles toggling of the drawer.\n * @param {Element} drawer The drawer container element.\n * @private\n */\nMaterialLayout.prototype.drawerToggleHandler_ = function() {\n  'use strict';\n\n  this.drawer_.classList.toggle(this.CssClasses_.DRAWER_OPEN_CLASS);\n};\n\n/**\n * Handles (un)setting the `is-animating` class\n */\nMaterialLayout.prototype.headerTransitionEndHandler = function() {\n  'use strict';\n\n  this.header_.classList.remove(this.CssClasses_.ANIMATING_CLASS);\n};\n\n/**\n * Handles expanding the header on click\n */\nMaterialLayout.prototype.headerClickHandler = function() {\n  'use strict';\n\n  if (this.header_.classList.contains(this.CssClasses_.COMPACT_CLASS)) {\n    this.header_.classList.remove(this.CssClasses_.COMPACT_CLASS);\n    this.header_.classList.add(this.CssClasses_.ANIMATING_CLASS);\n  }\n};\n\n/**\n * Reset tab state, dropping active classes\n * @private\n */\nMaterialLayout.prototype.resetTabState_ = function(tabBar) {\n  'use strict';\n\n  for (var k = 0; k < tabBar.length; k++) {\n    tabBar[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\n/**\n * Reset panel state, droping active classes\n * @private\n */\nMaterialLayout.prototype.resetPanelState_ = function(panels) {\n  'use strict';\n\n  for (var j = 0; j < panels.length; j++) {\n    panels[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n  }\n};\n\n/**\n * Initialize element.\n */\nMaterialLayout.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var container = document.createElement('div');\n    container.classList.add('mdl-layout__container');\n    this.element_.parentElement.insertBefore(container, this.element_);\n    this.element_.parentElement.removeChild(this.element_);\n    container.appendChild(this.element_);\n\n    this.header_ = this.element_.querySelector('.' + this.CssClasses_.HEADER);\n    this.drawer_ = this.element_.querySelector('.' + this.CssClasses_.DRAWER);\n    this.tabBar_ = this.element_.querySelector('.' + this.CssClasses_.TAB_BAR);\n    this.content_ = this.element_.querySelector('.' + this.CssClasses_.CONTENT);\n\n    var mode = this.Mode_.STANDARD;\n\n    // Keep an eye on screen size, and add/remove auxiliary class for styling\n    // of small screens.\n    this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n    this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n    this.screenSizeHandler_();\n\n    if (this.header_) {\n      if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n        mode = this.Mode_.SEAMED;\n      } else if (this.header_.classList.contains(\n          this.CssClasses_.HEADER_WATERFALL)) {\n        mode = this.Mode_.WATERFALL;\n        this.header_.addEventListener('transitionend',\n          this.headerTransitionEndHandler.bind(this));\n        this.header_.addEventListener('click',\n          this.headerClickHandler.bind(this));\n      } else if (this.element_.classList.contains(\n          this.CssClasses_.HEADER_SCROLL)) {\n        mode = this.Mode_.SCROLL;\n      }\n\n      if (mode === this.Mode_.STANDARD) {\n        this.header_.classList.add(this.CssClasses_.SHADOW_CLASS);\n        if (this.tabBar_) {\n          this.tabBar_.classList.add(this.CssClasses_.SHADOW_CLASS);\n        }\n      } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n        this.header_.classList.remove(this.CssClasses_.SHADOW_CLASS);\n        if (this.tabBar_) {\n          this.tabBar_.classList.remove(this.CssClasses_.SHADOW_CLASS);\n        }\n      } else if (mode === this.Mode_.WATERFALL) {\n        // Add and remove shadows depending on scroll position.\n        // Also add/remove auxiliary class for styling of the compact version of\n        // the header.\n        this.content_.addEventListener('scroll',\n            this.contentScrollHandler_.bind(this));\n        this.contentScrollHandler_();\n      }\n    }\n\n    // Add drawer toggling button to our layout, if we have an openable drawer.\n    if (this.drawer_) {\n      var drawerButton = document.createElement('div');\n      drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n      drawerButton.addEventListener('click',\n          this.drawerToggleHandler_.bind(this));\n\n      // Add a class if the layout has a drawer, for altering the left padding.\n      // Adds the HAS_DRAWER_CLASS to the elements since this.header_ may or may\n      // not be present.\n      this.element_.classList.add(this.CssClasses_.HAS_DRAWER_CLASS);\n\n      // If we have a fixed header, add the button to the header rather than\n      // the layout.\n      if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n        this.header_.insertBefore(drawerButton, this.header_.firstChild);\n      } else {\n        this.element_.insertBefore(drawerButton, this.content_);\n      }\n\n      var obfuscator = document.createElement('div');\n      obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n      this.element_.appendChild(obfuscator);\n      obfuscator.addEventListener('click',\n          this.drawerToggleHandler_.bind(this));\n    }\n\n    // Initialize tabs, if any.\n    if (this.tabBar_) {\n      var tabContainer = document.createElement('div');\n      tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n      this.element_.insertBefore(tabContainer, this.tabBar_);\n      this.element_.removeChild(this.tabBar_);\n\n      var leftButton = document.createElement('div');\n      leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n      leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n      leftButton.addEventListener('click', function() {\n        this.tabBar_.scrollLeft -= 100;\n      }.bind(this));\n\n      var rightButton = document.createElement('div');\n      rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n      rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n      rightButton.addEventListener('click', function() {\n        this.tabBar_.scrollLeft += 100;\n      }.bind(this));\n\n      tabContainer.appendChild(leftButton);\n      tabContainer.appendChild(this.tabBar_);\n      tabContainer.appendChild(rightButton);\n\n      // Add and remove buttons depending on scroll position.\n      var tabScrollHandler = function() {\n        if (this.tabBar_.scrollLeft > 0) {\n          leftButton.classList.add(this.CssClasses_.ACTIVE_CLASS);\n        } else {\n          leftButton.classList.remove(this.CssClasses_.ACTIVE_CLASS);\n        }\n\n        if (this.tabBar_.scrollLeft <\n            this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n          rightButton.classList.add(this.CssClasses_.ACTIVE_CLASS);\n        } else {\n          rightButton.classList.remove(this.CssClasses_.ACTIVE_CLASS);\n        }\n      }.bind(this);\n\n      this.tabBar_.addEventListener('scroll', tabScrollHandler);\n      tabScrollHandler();\n\n      if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n        this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n      }\n\n      // Select element tabs, document panels\n      var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n      var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n\n      // Create new tabs for each tab element\n      for (var i = 0; i < tabs.length; i++) {\n        new MaterialLayoutTab(tabs[i], tabs, panels, this);\n      }\n    }\n\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n  }\n};\n\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {\n  'use strict';\n\n  if (tab) {\n    if (layout.tabBar_.classList.contains(\n        layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n      var ripple = document.createElement('span');\n      ripple.classList.add(layout.CssClasses_.RIPPLE);\n      rippleContainer.appendChild(ripple);\n      tab.appendChild(rippleContainer);\n    }\n\n    tab.addEventListener('click', function(e) {\n      e.preventDefault();\n      var href = tab.href.split('#')[1];\n      var panel = layout.content_.querySelector('#' + href);\n      layout.resetTabState_(tabs);\n      layout.resetPanelState_(panels);\n      tab.classList.add(layout.CssClasses_.ACTIVE_CLASS);\n      panel.classList.add(layout.CssClasses_.ACTIVE_CLASS);\n    });\n\n  }\n}\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialLayout,\n  classAsString: 'MaterialLayout',\n  cssClass: 'mdl-js-layout'\n});\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Ripple WSK component.\n * Implements WSK component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialRipple(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialRipple.prototype.Constant_ = {\n  INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n  INITIAL_SIZE: '1px',\n  INITIAL_OPACITY: '0.4',\n  FINAL_OPACITY: '0',\n  FINAL_SCALE: ''\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialRipple.prototype.CssClasses_ = {\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE: 'mdl-ripple',\n  IS_ANIMATING: 'is-animating',\n  IS_VISIBLE: 'is-visible'\n};\n\n/**\n * Handle mouse / finger down on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRipple.prototype.downHandler_ = function(event) {\n  'use strict';\n\n  this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n\n  if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n    this.ignoringMouseDown_ = false;\n  } else {\n    if (event.type === 'touchstart') {\n      this.ignoringMouseDown_ = true;\n    }\n    var frameCount = this.getFrameCount();\n    if (frameCount > 0) {\n      return;\n    }\n    this.setFrameCount(1);\n    var bound = event.currentTarget.getBoundingClientRect();\n    var x;\n    var y;\n    // Check if we are handling a keyboard click.\n    if (event.clientX === 0 && event.clientY === 0) {\n      x = Math.round(bound.width / 2);\n      y = Math.round(bound.height / 2);\n    } else {\n      var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n      var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n      x = Math.round(clientX - bound.left);\n      y = Math.round(clientY - bound.top);\n    }\n    this.setRippleXY(x, y);\n    this.setRippleStyles(true);\n    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n  }\n};\n\n/**\n * Handle mouse / finger up on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRipple.prototype.upHandler_ = function(event) {\n  'use strict';\n\n  // Don't fire for the artificial \"mouseup\" generated by a double-click.\n  if (event && event.detail !== 2) {\n    this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n  }\n};\n\n/**\n * Initialize element.\n */\nMaterialRipple.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var recentering =\n        this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n    if (!this.element_.classList.contains(\n        this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n      this.rippleElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.RIPPLE);\n      this.frameCount_ = 0;\n      this.rippleSize_ = 0;\n      this.x_ = 0;\n      this.y_ = 0;\n\n      // Touch start produces a compat mouse down event, which would cause a\n      // second ripples. To avoid that, we use this property to ignore the first\n      // mouse down after a touch start.\n      this.ignoringMouseDown_ = false;\n\n      if (this.rippleElement_) {\n        var bound = this.element_.getBoundingClientRect();\n        this.rippleSize_ = Math.sqrt(bound.width * bound.width +\n            bound.height * bound.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n      }\n\n      this.element_.addEventListener('mousedown', this.downHandler_.bind(this));\n      this.element_.addEventListener('touchstart',\n          this.downHandler_.bind(this));\n\n      this.element_.addEventListener('mouseup', this.upHandler_.bind(this));\n      this.element_.addEventListener('mouseleave', this.upHandler_.bind(this));\n      this.element_.addEventListener('touchend', this.upHandler_.bind(this));\n      this.element_.addEventListener('blur', this.upHandler_.bind(this));\n\n      this.getFrameCount = function() {\n        return this.frameCount_;\n      };\n\n      this.setFrameCount = function(fC) {\n        this.frameCount_ = fC;\n      };\n\n      this.getRippleElement = function() {\n        return this.rippleElement_;\n      };\n\n      this.setRippleXY = function(newX, newY) {\n        this.x_ = newX;\n        this.y_ = newY;\n      };\n\n      this.setRippleStyles = function(start) {\n        if (this.rippleElement_ !== null) {\n          var transformString;\n          var scale;\n          var size;\n          var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n\n          if (start) {\n            scale = this.Constant_.INITIAL_SCALE;\n            size = this.Constant_.INITIAL_SIZE;\n          } else {\n            scale = this.Constant_.FINAL_SCALE;\n            size = this.rippleSize_ + 'px';\n            if (recentering) {\n              offset = 'translate(' + bound.width / 2 + 'px, ' +\n                bound.height / 2 + 'px)';\n            }\n          }\n\n          transformString = 'translate(-50%, -50%) ' + offset + scale;\n\n          this.rippleElement_.style.webkitTransform = transformString;\n          this.rippleElement_.style.msTransform = transformString;\n          this.rippleElement_.style.transform = transformString;\n\n          if (start) {\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n          } else {\n            this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n          }\n        }\n      };\n\n      this.animFrameHandler = function() {\n        if (this.frameCount_-- > 0) {\n          window.requestAnimationFrame(this.animFrameHandler.bind(this));\n        } else {\n          this.setRippleStyles(false);\n        }\n      };\n    }\n  }\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialRipple,\n  classAsString: 'MaterialRipple',\n  cssClass: 'mdl-js-ripple-effect'\n});\n"],"sourceRoot":"/source/"}