/*
 Copyright 2016 Google Inc. All rights reserved.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/

:where(html),
.tokens {
  /* Outlined button container elevation */
  --md-comp-outlined-button-container-elevation: var(--md-sys-elevation-level0);
  /* Outlined button focus state layer opacity */
  --md-comp-outlined-button-focus-state-layer-opacity: var(
    --md-sys-state-focus-state-layer-opacity
  );
  /* Outlined button hover state layer opacity */
  --md-comp-outlined-button-hover-state-layer-opacity: var(
    --md-sys-state-hover-state-layer-opacity
  );
  /* Outlined button label tracking */
  --md-comp-outlined-button-label-text-tracking: var(
    --md-sys-typescale-label-large-tracking
  );
  /* Outlined button label weight */
  --md-comp-outlined-button-label-text-weight: var(
    --md-sys-typescale-label-large-weight
  );
  /* Outlined button label size */
  --md-comp-outlined-button-label-text-size: var(
    --md-sys-typescale-label-large-size
  );
  /* Outlined button label line height */
  --md-comp-outlined-button-label-text-line-height: var(
    --md-sys-typescale-label-large-line-height
  );
  /* Outlined button label font */
  --md-comp-outlined-button-label-text-font: var(
    --md-sys-typescale-label-large-font
  );
  /* Outlined button with icon icon size */
  --md-comp-outlined-button-with-icon-icon-size: 18px;
  /* Outlined button outline width */
  --md-comp-outlined-button-outline-width: 1px;
  /* Outlined button container height */
  --md-comp-outlined-button-container-height: 40px;
  /* Outlined button container shape */
  --md-comp-outlined-button-container-shape: var(--md-sys-shape-corner-full);
  /* Outlined button pressed state layer opacity */
  --md-comp-outlined-button-pressed-state-layer-opacity: var(
    --md-sys-state-pressed-state-layer-opacity
  );
  /* Outlined button with icon disabled icon opacity */
  --md-comp-outlined-button-with-icon-disabled-icon-opacity: 0.3799999952316284;
  /* Outlined button disabled label opacity */
  --md-comp-outlined-button-disabled-label-text-opacity: 0.3799999952316284;
  /* Outlined button disabled outline opacity */
  --md-comp-outlined-button-disabled-outline-opacity: 0.11999999731779099;
}

:is(.button,
button).outlined {
  background-color: transparent;
  color: var(--md-sys-color-primary);
  border: var(--md-comp-outlined-button-outline-width) solid var(--md-sys-color-outline);
  box-shadow: var(--md-sys-elevation-0);
  height: var(--md-comp-outlined-button-container-height);

  /* BUG: Tokens breaking render */
  /* border-radius: var(--md-comp-outlined-button-container-shape); */
  /* line-height: var(--md-comp-outlined-button-label-text-line-height); */
  /* letter-spacing: var(--md-comp-outlined-button-label-text-tracking); */
  /* font-size: var(--md-comp-outlined-button-label-text-size); */
  /* font-weight: var(--md-comp-outlined-button-label-text-weight); */
  /* font-family: var(--md-comp-outlined-button-label-text-font); */
  --state-hover-opacity: var(--md-comp-outlined-button-hover-state-layer-opacity);
  --state-focus-opacity: var(--md-comp-outlined-button-focus-state-layer-opacity);
  --state-active-opacity: var(
    --md-comp-outlined-button-pressed-state-layer-opacity
  );
  --state-disabled-opacity: var(
    --md-comp-outlined-button-disabled-unselected-outline-opacity
  );
  --state-outline-disabled-opacity: var(
    --md-comp-outlined-button-disabled-outline-opacity
  );
}

:is(.button,
button).outlined i {
    margin-left: -9px;
  }

:is(.button,
button).outlined:where(:hover,
.hover) {
    box-shadow: var(--md-sys-elevation-1);
  }

:is(.button,
button).outlined:where(:active,
.active) {
    box-shadow: var(--md-sys-elevation-0);
  }

:is(.button,
button).outlined:where(:focus,
.focus) {
    box-shadow: var(--md-sys-elevation-1);
  }

:is(.button,
button).outlined[disabled] {
    box-shadow: var(--md-sys-elevation-0);
    border-color: rgb(var(--md-sys-color-on-surface-rgb) / 0.12);
    color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
  }
