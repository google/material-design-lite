---
import Raw from "./Raw.astro";
import Navigation from "../components/Navigation.astro";
import type { MarkdownHeading } from "astro";

const { frontmatter } = Astro.props;
const headings: MarkdownHeading[] = Astro.props.headings ?? [];
---

<Raw {frontmatter}>
  <Navigation title={frontmatter.title} tab={frontmatter.tab}>
    <main>
      <section>
        <slot />
      </section>
      <aside class="headings">
        <nav>
          <h2 class="headline-small">On This Page</h2>
          <ul>
            {
              headings.map((heading) => {
                function getHTag(depth: number, text: string) {
                  switch (depth) {
                    case 1:
                      return <h1>{text}</h1>;
                    case 2:
                      return <h2>{text}</h2>;
                    case 3:
                      return <h3>{text}</h3>;
                    case 4:
                      return <h4>{text}</h4>;
                    case 5:
                      return <h5>{text}</h5>;
                    case 6:
                      return <h6>{text}</h6>;
                    default:
                      return <h1>{text}</h1>;
                  }
                }
                return (
                  <li>
                    <a class="heading" href={`#${heading.slug}`}>
                      {getHTag(heading.depth, heading.text)}
                    </a>
                  </li>
                );
              })
            }
          </ul>
        </nav>
      </aside>
    </main>
  </Navigation>
</Raw>

<style>
  html {
    scroll-behavior: smooth;
  }

  main {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: 1fr 240px;
    grid-template-areas: "content headings";
    border-top: 1px solid var(--md-sys-color-outline-variant);
  }

  section {
    grid-area: content;
    overflow: auto;
  }

  aside {
    grid-area: headings;
    border-left: 1px solid var(--md-sys-color-outline-variant);
    padding: 1rem;
  }

  @media (max-width: 768px) {
    main {
      grid-template-columns: 1fr;
      grid-template-areas: "content";
    }
    aside {
      display: none;
    }
  }
  .heading {
    --level: 0.4rem;
  }
  .heading :is(h1, h2, h3, h4, h5, h6) {
    margin: 0;
    padding: 0;
    font-size: 1rem;
    line-height: 1.5rem;
  }
  .heading h1 {
    margin-left: 0;
  }
  .heading h2 {
    margin-left: var(--level);
  }
  .heading h3 {
    margin-left: calc(var(--level) * 2);
  }
  .heading h4 {
    margin-left: calc(var(--level) * 3);
  }
  .heading h5 {
    margin-left: calc(var(--level) * 4);
  }
  .heading h6 {
    margin-left: calc(var(--level) * 5);
  }
</style>
