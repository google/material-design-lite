---
import Root from "./Root.astro";

interface Link {
  text: string;
  link: string;
  draft?: boolean;
}

const { frontmatter, links, link } = Astro.props as {
  frontmatter: any;
  link: string;
  links: Link[];
};
---

<Root {frontmatter}>
  <div id="root">
    <aside>
      <ul>
        {
          links.map((item, index) => {
            if (item.draft) {
              return (
                <li class="draft" id={`comp-${index}`}>
                  {item.text}
                </li>
              );
            }
            return (
              <a href={`/${item.link}`} data-selected={link === item.link}>
                <li id={`link-${index}`}>{item.text}</li>
              </a>
            );
          })
        }
      </ul>
    </aside>
    <section>
      <slot />
    </section>
  </div>
</Root>

<style>
  #root {
    display: flex;
    flex-direction: row;
    width: 100%;
    height: 100%;
  }
  aside {
    width: 250px;
    height: 100%;
    border-right: 1px solid var(--md-sys-color-outline-variant);
    padding: 0 1rem;
    overflow-y: auto;
  }
  section {
    flex: 1;
    padding: 1rem;
    max-width: 860px;
    margin: 0 auto;
    overflow-y: auto;
  }
  a[data-selected] {
    text-decoration: underline;
  }
  .draft {
    opacity: 0.5;
    color: var(--md-sys-color-on-surface);
  }
</style>
