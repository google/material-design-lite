---
import Github from './Github.astro';
import Options from './Options.astro';

const { title, tab, article} = Astro.props;

const MENU = [
  {
    text: "Overview",
    icon: "home",
    header: true,
    children: [
      {
        text: "Introduction",
        link: "introduction",
      },
      {
        text: "Typography",
        link: "overview/typography",
      },
      {
        text: "Color",
        link: "overview/color",
      },
      {
        text: "Icons",
        link: "overview/icons",
      },
      {
        text: "Shape",
        link: "overview/shape",
      },
      {
        text: "Elevation",
        link: "overview/elevation",
      },
      {
        text: "Themes",
        link: "overview/themes",
      },
      {
        text: "FAQ",
        link: "faq",
      },
    ],
  },
  {
    text: "Demos",
    icon: "play_circle_outline",
    header: true,
    children: [
      {
        text: "Scaffold",
        link: "demos/scaffold",
      },
      {
        text: "Sticker sheet",
        link: "demos/sticker-sheet",
        draft: true,
      },
    ],
  },
  {
    text: "Components",
    icon: "widgets",
    header: true,
    children: [
      {
        text: "Autocomplete",
        link: "components/autocomplete",
      },
      {
        text: "Badge",
        link: "components/badge",
      },
      {
        text: "Banner",
        link: "components/banner",
        draft: true,
      },
      {
        text: "Button",
        link: "components/button",
      },
      {
        text: "Bottom app bar",
        link: "components/bottom-app-bar",
      },
      {
        text: "Bottom sheet",
        link: "components/bottom-sheet",
        draft: true,
      },
      {
        text: "Card",
        link: "components/card",
      },
      {
        text: "Chip",
        link: "components/chip",
      },
      {
        text: "Checkbox",
        link: "components/checkbox",
      },
      {
        text: "Divider",
        link: "components/divider",
      },
      {
        text: "Date picker",
        link: "components/date-picker",
        draft: true,
      },
      {
        text: "Dialog",
        link: "components/dialog",
      },
      {
        text: "Expansion Panel",
        link: "components/expansion-panel",
        draft: true,
      },
      {
        text: "Image list",
        link: "components/image-list",
        draft: true,
      },
      {
        text: "Floating action button",
        link: "components/fab",
      },
      {
        text: "Icon",
        link: "components/icon",
      },
      {
        text: "Grid list",
        link: "components/grid-list",
        draft: true,
      },
      {
        text: "List",
        link: "components/list",
      },
      {
        text: "Menu",
        link: "components/menu",
        draft: true,
      },
      {
        text: "Progress indicator",
        link: "components/progress-indicator",
      },
      {
        text: "Navigation bar",
        link: "components/navigation-bar",
      },
      {
        text: "Navigation drawer",
        link: "components/navigation-drawer",
      },
      {
        text: "Navigation rail",
        link: "components/navigation-rail",
      },
      {
        text: "Radio button",
        link: "components/radio-button",
      },
      {
        text: "Ripple",
        link: "components/ripple",
      },
      {
        text: "Slider",
        link: "components/slider",
      },
      {
        text: "Select",
        link: "components/select",
        draft: true,
      },
      {
        text: "Segmented Button",
        link: "components/segmented-button",
      },
      {
        text: "Stepper",
        link: "components/stepper",
        draft: true,
      },
      {
        text: "Sort header",
        link: "components/sort-header",
        draft: true,
      },
      {
        text: "Snackbar",
        link: "components/snackbar",
      },
      {
        text: "Switch",
        link: "components/switch",
      },
      {
        text: "Table",
        link: "components/table",
      },
      {
        text: "Text field",
        link: "components/text-field",
      },
      {
        text: "Tree",
        link: "components/tree",
        draft: true,
      },
      {
        text: "Tooltip",
        link: "components/tooltip",
      },
      {
        text: "Focus Ring",
        link: "components/focus-ring",
      },
      {
        text: "Tabs",
        link: "components/tabs",
      },
      {
        text: "Top app bar",
        link: "components/top-app-bar",
      },
    ],
  },
];
---

<main>
  <aside class="navigation-rail" style="min-height: 600px">
    <button class="icon">
      <i class="material-icons">menu</i>
    </button>

    <button class="fab">
        <i class="material-icons">file_download</i>
    </button>

    <nav>
        {
            MENU.map((item) => {
                return (
                <input type="radio" name="nav-rail" value={item.text} id={item.text} checked={item.text === tab} />
                <label for={item.text}>
                    <i class="material-icons">{item.icon}</i>
                    <span>{item.text}</span>
                </label>
                )
            })
        }
    </nav>
  </aside>

  <section>
    <header id="header" class="top-app-bar">
      <span class="title">{title}</span>
      <div class="actions">
         <button class="icon button">
          <Github />
        </button>
         <button id="options" class="icon button">
          <i class="material-icons">palette</i>
        </button>
      </div>
    </header>

    <article>
      <slot />
    </article>
  </section>

  <aside class="options">
    <Options/>
  </aside>
</main>

<style>
  main {
    display: flex;
    flex-direction: row;
    height: 100vh;
  }

  section {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  article {
    flex: 1;
    overflow: auto;
  }

  .top-app-bar.scrolled {
    box-shadow: none;
  }

  .options {
    display: none;
  }

  .options.open {
    display: block;
    min-width: 250px;
    height: 100vh;
    overflow: auto;

    border-left: 1px solid var(--md-sys-color-outline-variant);
  }
</style>

<script>
  // App bar scrolling
  const header = document.querySelector("#header")!;
  const article = document.querySelector("article")!;
  article.addEventListener("scroll", (e) => {
    if (article.scrollTop > 0) {
      header.classList.add("scrolled");
    } else {
      header.classList.remove("scrolled");
    }
  });

  // Options toggle
  const options = document.querySelector(".options")!;
  const optionsBtn = document.querySelector("#options")!;
  optionsBtn.addEventListener("click", (e) => {
    const isOpen = options.classList.contains("open");
    const icon = optionsBtn.children[0];
    if (isOpen) {
      options.classList.remove("open");
      icon.innerHTML  = 'palette';
    } else {
      options.classList.add("open");
      icon.innerHTML  = 'close';
    }
  });
</script>