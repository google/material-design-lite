---
import Github from './Github.astro';
import Options from './Options.astro';
import {MENU} from '../utils/menu';

const {title, tab} = Astro.props;
---

<main>
  <aside class="navigation-rail" style="min-height: 600px">
    <button class="icon">
      <i class="material-icons">menu</i>
    </button>

    <button class="fab">
        <i class="material-icons">file_download</i>
    </button>

    <nav>
        {
            MENU.map((item) => {
                return (
                <input type="radio" name="nav-rail" value={item.text} id={item.text} checked={item.text.toLowerCase() === tab} />
                <label for={item.text}>
                    <i class="material-icons">{item.icon}</i>
                    <span>{item.text}</span>
                </label>
                )
            })
        }
    </nav>
  </aside>

  <section>
    <header id="header" class="top-app-bar">
      <span class="title">{title}</span>
      <div class="actions">
        <a class="icon button" href="/faq">
          <i class="material-icons">help</i>
        </a>
         <a class="icon button" href="https://github.com/rodydavis/material-design-lite" target="_blank" rel="noopener">
          <Github />
         </a>
         <button id="options" class="icon button">
          <i class="material-icons">palette</i>
        </button>
      </div>
    </header>

    <article>
      <slot />
    </article>
  </section>

  <aside class="options">
    <Options/>
  </aside>
</main>

<style>
  main {
    display: flex;
    flex-direction: row;
    height: 100vh;
  }

  section {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  article {
    flex: 1;
    overflow: auto;
  }

  .top-app-bar.scrolled {
    box-shadow: none;
  }

  .options {
    display: none;
  }

  .options.open {
    display: block;
    min-width: 250px;
    height: 100vh;
    overflow: auto;

    border-left: 1px solid var(--md-sys-color-outline-variant);
  }

  .actions a:hover {
    text-decoration: none;
  }
</style>

<script>
  import {MENU} from '../utils/menu';

  // App bar scrolling
  const header = document.querySelector("#header")!;
  const article = document.querySelector("article")!;
  article.addEventListener("scroll", (e) => {
    if (article.scrollTop > 0) {
      header.classList.add("scrolled");
    } else {
      header.classList.remove("scrolled");
    }
  });

  // Options toggle
  const options = document.querySelector(".options")!;
  const optionsBtn = document.querySelector("#options")!;
  optionsBtn.addEventListener("click", (e) => {
    const isOpen = options.classList.contains("open");
    const icon = optionsBtn.children[0];
    if (isOpen) {
      options.classList.remove("open");
      icon.innerHTML  = 'palette';
    } else {
      options.classList.add("open");
      icon.innerHTML  = 'close';
    }
  });

  // Navigation links
 for (const item of MENU) {
    const link = document.querySelector(`#${item.text}`)!;
    link.addEventListener("change", (e) => {
      window.location.href = item.href;
    });
    link.addEventListener("click", (e) => {
      e.preventDefault();
      window.location.href = item.href;
    });
 }
</script>