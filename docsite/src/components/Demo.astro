---
import * as fs from "fs";
import Snippet from "./Snippet.astro";

const { root, group, outline } = Astro.props;

const allSnippets = fs.readdirSync(`../lib/${root}`);
let groupSnippets = group
  ? allSnippets.filter((s) => s.includes(`${group}.`))
  : allSnippets;
const snippets = [];
// Order the snippets by name [default, default.ripple, deffault.disabled]
if (
  group &&
  groupSnippets.length > 0 &&
  groupSnippets[0].includes("disabled")
) {
  // Move to end
  const disabled = groupSnippets.shift();
  if (disabled) {
    groupSnippets.push(disabled);
  }
}

// Move default to start
const idx = groupSnippets.findIndex((s) => s.split(".").length == 2);
if (idx > -1) {
  const defaultSnippet = groupSnippets.splice(idx, 1)[0];
  groupSnippets.unshift(defaultSnippet);
}

for (const snippet of groupSnippets) {
  const name = snippet
    .split(".")
    .filter((e) => e !== "html")
    .join(" ")
    .replaceAll("-", " ")
    .split(" ")
    .map((s) => s.charAt(0).toUpperCase() + s.slice(1))
    .join(" ");
  const content = fs.readFileSync(`../lib/${root}/${snippet}`, "utf8");
  snippets.push({ content, snippet, name });
}
---

<section>
  <!-- HTML Sandobx editor -->
</section>

<section>
  <div class="preview row">
    {
      snippets.map(({ content, snippet, name }) => (
        <div id={snippet} class="snippet">
          <div
            class="render"
            data-outline={outline === true}
            set:html={content}
          />
          <div class="label">{name}</div>
        </div>
      ))
    }
  </div>
  <div class="code">
    <Snippet
      code={snippets
        .map((e) => `<!-- ${e.name} -->\n${e.content}`)
        .join("\n\n")}
      lang="html"
    />
  </div>
</section>

<style>
  .preview {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    margin: 2rem;
    gap: 1rem;
  }
  .render[data-outline] {
    outline: 2px solid var(--md-sys-color-outline-variant);
    outline-offset: 0.5rem;
  }
  .snippet {
    padding: 1rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .label {
    font-size: 0.8rem;
    text-align: center;
    margin-top: 0.8rem;
    opacity: 0.5;
    text-align: center;
  }
  .code {
    position: relative;
    width: 100%;
  }
</style>
